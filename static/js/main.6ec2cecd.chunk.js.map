{"version":3,"sources":["AppContext/AppContext.js","components/Navigation/SearchVehicle.js","components/Navigation/Navigation.js","components/LoadingSpinner/LoadingSpinner.js","components/Notification/Notification.js","components/Modals/DeleteResourceModal.js","components/ShowVehicle/VehicleDetails.js","components/BrowseVehicles/BrowseVehicles.js","Models/Service.js","Firebase/Firebase.js","Models/Vehicle.js","components/VehicleForm/VehicleForm.js","components/AddVehicle/AddVehicle.js","components/EditVehicle/EditVehicle.js","Models/Booking.js","components/Modals/WarningModal.js","components/AddBooking/AddBooking.js","components/AddService/AddService.js","components/AddJourney/AddJourney.js","Models/Journey.js","components/AddJourney/AddJourneyForm.js","components/AddFuelPurchase/AddFuelPurchase.js","Models/FuelPurchase.js","components/AddFuelPurchase/AddFuelPurchaseForm.js","components/ShowVehicle/ShowVehicle.js","components/Header/Header.js","components/Dashboard/RevenueChart.js","components/Dashboard/Dashboard.js","components/App/App.js","serviceWorker.js","index.js"],"names":["AppContext","React","createContext","AppProvider","Provider","AppConsumer","Consumer","SearchVehicle","useState","selected","setSelected","typeaheadRef","useRef","history","useHistory","handleSubmit","e","preventDefault","length","push","id","vehicles","Form","inline","onSubmit","className","FormGroup","labelKey","option","manufacturer","model","year","filterBy","options","placeholder","highlightOnlyResult","minLength","onChange","ref","Button","variant","type","onClick","current","clear","focus","Navigation","Navbar","bg","expand","Brand","as","Link","to","Toggle","aria-controls","Collapse","Nav","NavItem","NavDropdown","title","Item","Component","LoadingSpinner","Spinner","animation","role","style","width","height","Notification","props","show","setShow","Toast","display","position","top","left","transform","onClose","delay","autohide","Header","Body","message","DeleteResourceModal","useContext","deleteResource","resource","resourceType","Modal","size","showDeleteResourceModal","onHide","setDeleteResourceModalShow","aria-labelledby","centered","closeButton","Title","trim","toLowerCase","ListGroup","registrationNumber","odometerReading","tankCapacity","find","v","bookings","some","b","journeys","j","moment","journeyStartedAt","format","journeyEndedAt","journeyStartOdometerReading","journeyEndOdometerReading","journeyFrom","journeyTo","vehicleID","startDate","endDate","startOdometer","bookingType","Number","parseFloat","bookingCost","toFixed","servicedAt","serviceOdometer","fuelPurchases","f","fuelQuantity","fuelPrice","renderResourceInfo","Footer","confirmDeleteResource","VehicleDetails","vehicle","vehicleBookings","vehicleServices","services","Accordion","Card","overflow","eventKey","ButtonGroup","aria-label","icon","faEdit","faTrash","Dropdown","drop","faCog","Menu","Object","keys","printDetails","map","field","index","key","sort","b1","b2","isBefore","booking","Date","toLocaleDateString","reduce","forEach","journey1","journey2","journey1StartedAt","journey2StartedAt","journey","service1","service2","service1At","service2At","service","fuelPurchase1","fuelPurchase2","bookingFuelPurchase1","bookingID","booking1StartedAt","bookingFuelPurchase2","booking2StartedAt","fuelPurchase","BrowseVehicles","loading","notification","Container","Row","Col","i","Service","require","createdAt","updatedAt","this","_id","_vehicleID","_serviceOdometer","_servicedAt","_createdAt","_updatedAt","value","getTotalServicesDone","filter","s","getLastServiceOdometerReading","now","firstServicesBeforeToday","firstService","secondService","firstServiceDate","diff","requiresService","isSameOrAfter","config","apiKey","process","API_KEY","authDomain","AUTH_DOMAIN","databaseURL","DATABASE_URL","projectId","PROJECT_ID","storageBucket","STORAGE_BUCKET","messagingSenderId","MESSAGING_SENDER_ID","appId","APP_ID","firebase","initializeApp","Vehicle","_bookings","_services","_manufacturer","_model","_year","_odometerReading","_registrationNumber","_tankCapacity","_fuelEconomy","calculateFuelEconomy","newBooking","bookingsCopy","bookingToBeDeleted","removeJourney","newJourney","addJourney","newService","serviceID","servicesCopy","serviceToBeDeleted","newFuelPurchase","addFuelPurchase","removeFuelPurchase","calculateRevenueRecorded","total","totalFuelPurchaseCost","totalCost","totalDistanceTravelled","calculateTotalDistanceTravelled","isNaN","isFinite","totalDistance","callback","todaysJourney","isSame","firestore","collection","doc","update","then","catch","console","dir","_fuelPurchases","schema","yup","shape","required","min","subtract","get","max","add","matches","VehicleForm","manufacturerInputRef","validationSchema","values","initialValues","handleChange","resetForm","touched","errors","isSubmitting","noValidate","Group","controlId","lg","md","Label","Control","name","isInvalid","isValid","Feedback","step","disabled","AddVehicle","addResource","vehicleToBeAdded","cloneDeep","EditVehicle","editVehicle","useParams","vehicleToBeEdited","hasOwnProperty","Booking","_journeys","_bookingType","_startDate","_endDate","_startOdometer","_bookingCost","calculateBookingCost","days","dist","newFuelPurchases","WarningModal","cancelHandler","header","body","acceptHandler","accept","cancel","extendMoment","Moment","AddBooking","status","bookingConflict","setBookingConflict","serviceConflict","setServiceConflict","bookingToBeAdded","setBookingToBeAdded","addBooking","setAddBooking","vehicleToBeModified","confirmDeleteConflictedResource","conflictedResourceType","conflictedResource","newResourceType","newResource","useEffect","range","overlaps","within","column","sm","AddService","serviceToBeAdded","setServiceToBeAdded","addService","setAddService","AddJourney","initialState","fields","state","match","params","context","setState","booking1","booking2","booking1StartDate","booking2StartDate","faPlus","contextType","Journey","_bookingID","_journeyStartOdometerReading","_journeyEndOdometerReading","_journeyStartedAt","_journeyEndedAt","_journeyFrom","_journeyTo","AddJourneyForm","journeyToBeAdded","setJourneyToBeAdded","setAddJourney","associatedBooking","AddFuelPurchase","FuelPurchase","_fuelPrice","_fuelQuantity","AddFuelPurchaseForm","fuelPurchaseToBeAdded","setFuelPurchaseToBeAdded","setAddFuelPurchase","moreThan","ShowVehicle","vehicleJourneys","vehicleFuelPurchases","headerText","RevenueChart","data","stroke","strokeDasharray","dataKey","content","payload","label","active","barSize","fill","Dashboard","revenue","App","fetchCollection","formattedCollection","querySnapshot","docs","prevState","calculateTotalRevenue","vehicleRevenue","mappedBookings","mappedBooking","bookingMonthAndYear","mappedBooking1","mappedBooking2","isSameOrBefore","bookingsByMonthAndYear","monthAndYear","findIndex","entry","mappedRevenue","r","revenue1","revenue2","dismissNotification","setTimeout","fieldsChanged","oldVehicleIndex","oldVehicle","Array","isArray","err","collectionName","selectedVehicle","selectedVehicleIndex","set","db","delete","removeBookingByID","removeJourneyByBookingID","removeServiceByID","removeFuelPurchaseByBookingID","addVehicle","fetchCollections","updateVehicleOdometer","collections","Promise","all","exact","path","render","Boolean","window","location","hostname","ReactDOM","basename","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6ec2cecd.chunk.js","sourcesContent":["/**\r\n * AppContext.js\r\n */\r\nimport React from 'react';\r\n\r\n/**\r\n * AppContext - creates a \"global\" state for the app\r\n * @type {React.Context<{}>}\r\n */\r\nexport const AppContext = React.createContext({});\r\n\r\n/**\r\n * AppProvider - provides the context for child components to consume\r\n * @type {React.Provider<{}>}\r\n */\r\nexport const AppProvider = AppContext.Provider;\r\n\r\n/**\r\n * AppConsumer - allows child components to consume the context\r\n * @type {React.Consumer<{}>}\r\n */\r\nexport const AppConsumer = AppContext.Consumer;\r\n","/**\r\n * SearchVehicle.js\r\n */\r\nimport React, {useRef, useState} from 'react';\r\nimport {Typeahead} from 'react-bootstrap-typeahead';\r\nimport {AppConsumer} from \"../../AppContext/AppContext\";\r\nimport {Button, Form, FormGroup} from \"react-bootstrap\";\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n/**\r\n * SearchVehicle component - allows the user to search for a vehicle (with typeahead) by\r\n * manufacturer, model or year\r\n * @returns {*}\r\n * @constructor\r\n */\r\nexport const SearchVehicle = () => {\r\n  const [selected, setSelected] = useState([]);\r\n  const typeaheadRef = useRef(null);\r\n  const history = useHistory();\r\n\r\n  const handleSubmit = e => {\r\n\te.preventDefault();\r\n\r\n\tif (selected && selected.length) {\r\n\t  history.push(`/show/${selected[0].id}`);\r\n\t}\r\n  };\r\n\r\n  return (\r\n\t<AppConsumer>\r\n\t  {\r\n\t\t({vehicles}) => (\r\n\t\t  <Form inline onSubmit={handleSubmit} className=\"mr-md-3\">\r\n\t\t\t<FormGroup>\r\n\t\t\t  <Typeahead\r\n\t\t\t\tid=\"search-vehicle\"\r\n\t\t\t\tlabelKey={(option) => `${option.manufacturer} ${option.model} (${option.year})`}\r\n\t\t\t\tfilterBy={['manufacturer', 'model', 'year']}\r\n\t\t\t\toptions={vehicles}\r\n\t\t\t\tplaceholder=\"Search for a vehicle...\"\r\n\t\t\t\thighlightOnlyResult\r\n\t\t\t\tminLength={1}\r\n\t\t\t\tonChange={selected => setSelected(selected)}\r\n\t\t\t\tref={typeaheadRef}\r\n\t\t\t  />\r\n\t\t\t  <Button variant=\"outline-primary\" type=\"submit\" className=\"ml-sm-3\">\r\n\t\t\t\tSearch\r\n\t\t\t  </Button>\r\n\t\t\t  <Button\r\n\t\t\t\tonClick={() => {\r\n\t\t\t\t  typeaheadRef.current.clear();\r\n\t\t\t\t  typeaheadRef.current.focus();\r\n\t\t\t\t}}\r\n\t\t\t\tvariant=\"outline-danger\"\r\n\t\t\t\tclassName=\"ml-sm-3\">\r\n\t\t\t\tClear\r\n\t\t\t  </Button>\r\n\t\t\t</FormGroup>\r\n\t\t  </Form>\r\n\t\t)\r\n\t  }\r\n\t</AppConsumer>\r\n  )\r\n};\r\n","/**\r\n * Navigation.js\r\n */\r\nimport React from 'react';\r\nimport {Navbar, Nav, NavDropdown} from 'react-bootstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport NavItem from \"react-bootstrap/NavItem\";\r\nimport {SearchVehicle} from \"./SearchVehicle\";\r\n\r\n/**\r\n * Navigation component - renders a navbar to navigate through the app\r\n */\r\nexport class Navigation extends React.Component {\r\n  render() {\r\n\treturn (\r\n\t  <Navbar bg=\"light\" variant=\"light\" expand=\"lg\">\r\n\t\t<Navbar.Brand as={Link} to=\"/\" className=\"mr-lg-5\">Car Rental System</Navbar.Brand>\r\n\t\t<Navbar.Toggle aria-controls=\"navbar-collapse\"/>\r\n\t\t<Navbar.Collapse id=\"navbar-collapse\">\r\n\t\t  <Nav className=\"mr-auto\">\r\n\t\t\t<NavItem>\r\n\t\t\t  <Nav.Link as={Link} to=\"/\" className=\"mr-lg-3\">Home</Nav.Link>\r\n\t\t\t</NavItem>\r\n\t\t\t<NavDropdown className=\"mr-lg-4\" title=\"Manage vehicles\" id=\"manage-vehicles\">\r\n\t\t\t  <NavDropdown.Item as={Link} to=\"/browse\">Browse vehicles</NavDropdown.Item>\r\n\t\t\t  <NavDropdown.Item as={Link} to=\"/add\">Add a new vehicle</NavDropdown.Item>\r\n\t\t\t</NavDropdown>\r\n\t\t  </Nav>\r\n\t\t  <SearchVehicle />\r\n\t\t</Navbar.Collapse>\r\n\t  </Navbar>\r\n\t)\r\n  }\r\n}\r\n","/**\r\n * LoadingSpinner.js\r\n */\r\nimport React from 'react';\r\nimport { Spinner } from 'react-bootstrap';\r\n\r\n/**\r\n * LoadingSpinner component - renders a loading spinner, with a fallback for screen readers\r\n * @returns {*}\r\n * @constructor\r\n */\r\nexport const LoadingSpinner = () => (\r\n  <Spinner\r\n\tanimation=\"border\"\r\n\tvariant=\"success\"\r\n\trole=\"status\"\r\n\tstyle={{width: '5rem', height: '5rem'}}>\r\n\t<span className=\"sr-only\">Loading...</span>\r\n  </Spinner>\r\n);\r\n","/**\r\n * Notification.js\r\n */\r\nimport React, {useState} from 'react';\r\nimport {Toast} from \"react-bootstrap\";\r\n\r\n/**\r\n * @typedef {Object} NotificationProps\r\n * @property {boolean} display - determines whether a notification should be shown\r\n * @property {string} message - notification message\r\n */\r\n/**\r\n * Notification component - renders notifications as a Toast, which is dismissible and auto hides\r\n * in 3 seconds\r\n * @param {NotificationProps} props\r\n * @returns {*}\r\n * @constructor\r\n */\r\nexport const Notification = props => {\r\n  const [show, setShow] = useState(true);\r\n\r\n  return (\r\n\t<Toast\r\n\t  style={{\r\n\t\tdisplay: props.display ? \"block\" : \"none\",\r\n\t\tposition: 'absolute',\r\n\t\ttop: 0,\r\n\t\tleft: '50%',\r\n\t\ttransform: 'translateX(-50%)'\r\n\t  }}\r\n\t  onClose={() => setShow(false)}\r\n\t  show={show}\r\n\t  delay={3000}\r\n\t  autohide>\r\n\t  <Toast.Header>\r\n\t\t<strong className=\"mr-auto\">Notification</strong>\r\n\t  </Toast.Header>\r\n\t  <Toast.Body>\r\n\t\t{props.message}\r\n\t  </Toast.Body>\r\n\t</Toast>\r\n  )\r\n};\r\n","/**\r\n * DeleteResourceModal.js\r\n */\r\nimport React, {useContext} from 'react';\r\nimport {Button, ListGroup, Modal} from \"react-bootstrap\";\r\nimport {AppConsumer, AppContext} from \"../../AppContext/AppContext\";\r\nimport moment from \"moment\";\r\n\r\n/**\r\n * DeleteResourceModal component - displays a modal to confirm whether a resource (i.e. vehicle, booking,\r\n * journey, service or fuel purchase) should be deleted\r\n * @returns {*}\r\n * @constructor\r\n */\r\nexport const DeleteResourceModal = () => {\r\n  const {vehicles, deleteResource} = useContext(AppContext);\r\n  const {resource, resourceType} = deleteResource;\r\n\r\n  /**\r\n   * Renders all the information about a resource in a list\r\n   * @param {string} resourceType - one of: \"vehicle\", \"booking\", \"journey\", \"service\",\r\n   * \"fuelPurchase\" or \"fuel purchase\"\r\n   * @param {(Vehicle|Booking|Journey|Service|FuelPurchase)} resource - the resource object\r\n   * @returns {*}\r\n   */\r\n  const renderResourceInfo = (resourceType, resource) => {\r\n\tif (resourceType && resource) {\r\n\t  switch (resourceType.trim().toLowerCase()) {\r\n\t\tcase 'vehicle':\r\n\t\t  return (\r\n\t\t\t<ListGroup>\r\n\t\t\t  <ListGroup.Item>Manufacturer: {resource ? resource.manufacturer : ''}</ListGroup.Item>\r\n\t\t\t  <ListGroup.Item>Model: {resource ? resource.model : ''}</ListGroup.Item>\r\n\t\t\t  <ListGroup.Item>Year: {resource ? resource.year : ''}</ListGroup.Item>\r\n\t\t\t  <ListGroup.Item>Registration\r\n\t\t\t\tnumber: {resource ? resource.registrationNumber : ''}</ListGroup.Item>\r\n\t\t\t  <ListGroup.Item>Odometer\r\n\t\t\t\treading: {resource ? resource.odometerReading : 0} km</ListGroup.Item>\r\n\t\t\t  <ListGroup.Item>Tank\r\n\t\t\t\tcapacity: {resource ? resource.tankCapacity : 0} L</ListGroup.Item>\r\n\t\t\t</ListGroup>\r\n\t\t  );\r\n\r\n\t\tcase 'journey':\r\n\t\t  return (\r\n\t\t\t<ListGroup>\r\n\t\t\t  <ListGroup.Item>\r\n\t\t\t\tJourney\r\n\t\t\t\tvehicle: {resource && vehicles.find(v => v.bookings.some(b => b.journeys.some(j => j.id === resource.id))) ? `${vehicles.find(v => v.bookings.some(b => b.journeys.some(j => j.id === resource.id))).manufacturer} ${vehicles.find(v => v.bookings.some(b => b.journeys.some(j => j.id === resource.id))).model} (${vehicles.find(v => v.bookings.some(b => b.journeys.some(j => j.id === resource.id))).year})` : ''}\r\n\t\t\t  </ListGroup.Item>\r\n\t\t\t  <ListGroup.Item>\r\n\t\t\t\tJourney start date: {resource ? moment(resource.journeyStartedAt).format('DD/MM/YYYY') : ''}\r\n\t\t\t  </ListGroup.Item>\r\n\t\t\t  <ListGroup.Item>\r\n\t\t\t\tJourney end date: {resource ? moment(resource.journeyEndedAt).format('DD/MM/YYYY') : ''}\r\n\t\t\t  </ListGroup.Item>\r\n\t\t\t  <ListGroup.Item>\r\n\t\t\t\tJourney start odometer\r\n\t\t\t\treading: {resource ? `${resource.journeyStartOdometerReading} km` : ''}\r\n\t\t\t  </ListGroup.Item>\r\n\t\t\t  <ListGroup.Item>\r\n\t\t\t\tJourney end odometer\r\n\t\t\t\treading: {resource ? `${resource.journeyEndOdometerReading} km` : ''}\r\n\t\t\t  </ListGroup.Item>\r\n\t\t\t  <ListGroup.Item>\r\n\t\t\t\tJourney from: {resource ? resource.journeyFrom : ''}\r\n\t\t\t  </ListGroup.Item>\r\n\t\t\t  <ListGroup.Item>\r\n\t\t\t\tJourney to: {resource ? resource.journeyTo : ''}\r\n\t\t\t  </ListGroup.Item>\r\n\t\t\t</ListGroup>\r\n\t\t  );\r\n\r\n\t\tcase 'booking':\r\n\t\t  return (\r\n\t\t\t<ListGroup>\r\n\t\t\t  <ListGroup.Item>\r\n\t\t\t\tBooking\r\n\t\t\t\tvehicle: {resource ? `${vehicles.find(v => v.id === resource.vehicleID).manufacturer} ${vehicles.find(v => v.id === resource.vehicleID).model} (${vehicles.find(v => v.id === resource.vehicleID).year})` : ''}\r\n\t\t\t  </ListGroup.Item>\r\n\t\t\t  <ListGroup.Item>\r\n\t\t\t\tBooking start date: {resource ? moment(resource.startDate).format('DD/MM/YYYY') : ''}\r\n\t\t\t  </ListGroup.Item>\r\n\t\t\t  <ListGroup.Item>\r\n\t\t\t\tBooking end date: {resource ? moment(resource.endDate).format('DD/MM/YYYY') : ''}\r\n\t\t\t  </ListGroup.Item>\r\n\t\t\t  <ListGroup.Item>\r\n\t\t\t\tBooking start odometer reading: {resource ? `${resource.startOdometer} km` : ''}\r\n\t\t\t  </ListGroup.Item>\r\n\t\t\t  <ListGroup.Item>\r\n\t\t\t\tBooking type: {resource ? resource.bookingType === 'K' ? 'Per kilometer' : 'Per' +\r\n\t\t\t\t' day' : ''}\r\n\t\t\t  </ListGroup.Item>\r\n\t\t\t  <ListGroup.Item>\r\n\t\t\t\tBooking cost: {\r\n\t\t\t    `$ ${Number.parseFloat(resource.bookingCost).toFixed(2)}`\r\n\t\t\t  }\r\n\t\t\t  </ListGroup.Item>\r\n\t\t\t</ListGroup>\r\n\t\t  );\r\n\r\n\t\tcase 'service':\r\n\t\t  return (\r\n\t\t\t<ListGroup>\r\n\t\t\t  <ListGroup.Item>\r\n\t\t\t\tService\r\n\t\t\t\tvehicle: {resource && vehicles.some(v => v.id === resource.vehicleID) ? `${vehicles.find(v => v.id === resource.vehicleID).manufacturer} ${vehicles.find(v => v.id === resource.vehicleID).model} (${vehicles.find(v => v.id === resource.vehicleID).year})` : ''}\r\n\t\t\t  </ListGroup.Item>\r\n\t\t\t  <ListGroup.Item>\r\n\t\t\t\tServiced at: {resource ? moment(resource.servicedAt).format('DD/MM/YYYY') : ''}\r\n\t\t\t  </ListGroup.Item>\r\n\t\t\t  <ListGroup.Item>\r\n\t\t\t\tService odometer reading: {resource ? `${resource.serviceOdometer} km` : ''}\r\n\t\t\t  </ListGroup.Item>\r\n\t\t\t</ListGroup>\r\n\t\t  );\r\n\r\n\t\tcase 'fuelpurchase':\r\n\t\tcase 'fuel purchase':\r\n\t\t  return (\r\n\t\t\t<ListGroup>\r\n\t\t\t  <ListGroup.Item>\r\n\t\t\t\tFuel purchased for\r\n\t\t\t\tvehicle: {resource && vehicles.find(v => v.bookings.some(b => b.fuelPurchases.some(f => f.id === resource.id))) ? `${vehicles.find(v => v.bookings.some(b => b.fuelPurchases.some(f => f.id === resource.id))).manufacturer} ${vehicles.find(v => v.bookings.some(b => b.fuelPurchases.some(f => f.id === resource.id))).model} (${vehicles.find(v => v.bookings.some(b => b.fuelPurchases.some(f => f.id === resource.id))).year})` : ''}\r\n\t\t\t  </ListGroup.Item>\r\n\t\t\t  <ListGroup.Item>\r\n\t\t\t\tFuel quantity: {resource ? `${resource.fuelQuantity} L` : ''}\r\n\t\t\t  </ListGroup.Item>\r\n\t\t\t  <ListGroup.Item>\r\n\t\t\t\tFuel\r\n\t\t\t\tprice: {resource ? `$ ${Number.parseFloat(resource.fuelPrice).toFixed(2)}` : ''}\r\n\t\t\t  </ListGroup.Item>\r\n\t\t\t  <ListGroup.Item>\r\n\t\t\t\tTotal cost: {resource ? `$ ${(resource.fuelQuantity * resource.fuelPrice).toFixed(2)}` : ``}\r\n\t\t\t  </ListGroup.Item>\r\n\t\t\t</ListGroup>\r\n\t\t  );\r\n\r\n\t\tdefault:\r\n\t\t  return (\r\n\t\t\t<p className=\"text-center\">Error: resource info not found</p>\r\n\t\t  );\r\n\t  }\r\n\t}\r\n  };\r\n\r\n  return (\r\n\t<AppConsumer>\r\n\t  {\r\n\t\t({deleteResource}) => {\r\n\t\t  return (\r\n\t\t\t<Modal\r\n\t\t\t  size=\"lg\"\r\n\t\t\t  show={deleteResource.showDeleteResourceModal}\r\n\t\t\t  onHide={() => deleteResource.setDeleteResourceModalShow(null, null)}\r\n\t\t\t  aria-labelledby=\"delete-modal\"\r\n\t\t\t  centered\r\n\t\t\t>\r\n\t\t\t  <Modal.Header closeButton>\r\n\t\t\t\t<Modal.Title id=\"delete-modal\">\r\n\t\t\t\t  Delete confirmation\r\n\t\t\t\t</Modal.Title>\r\n\t\t\t  </Modal.Header>\r\n\t\t\t  <Modal.Body>\r\n\t\t\t\t<h3 className=\"mb-4\">Are you sure that you want to delete this {resourceType} from\r\n\t\t\t\t  the\r\n\t\t\t\t  system?</h3>\r\n\t\t\t\t<h4>{resourceType} information:</h4>\r\n\t\t\t  </Modal.Body>\r\n\t\t\t  {renderResourceInfo(resourceType, resource)}\r\n\t\t\t  <Modal.Footer>\r\n\t\t\t\t<Button\r\n\t\t\t\t  variant=\"danger\"\r\n\t\t\t\t  size=\"lg\"\r\n\t\t\t\t  className=\"mr-3\"\r\n\t\t\t\t  onClick={() => deleteResource.resource ? deleteResource.confirmDeleteResource(resourceType, resource) : ''}\r\n\t\t\t\t>\r\n\t\t\t\t  Delete\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Button\r\n\t\t\t\t  variant=\"info\"\r\n\t\t\t\t  size=\"lg\"\r\n\t\t\t\t  onClick={() => deleteResource.setDeleteResourceModalShow(null)}\r\n\t\t\t\t>\r\n\t\t\t\t  Cancel\r\n\t\t\t\t</Button>\r\n\t\t\t  </Modal.Footer>\r\n\t\t\t</Modal>\r\n\t\t  )\r\n\t\t}\r\n\t  }\r\n\t</AppConsumer>\r\n  )\r\n};\r\n","/**\r\n * VehicleDetail.js\r\n */\r\nimport React, {useContext} from 'react';\r\nimport {Accordion, Button, ButtonGroup, Card, ListGroup} from \"react-bootstrap\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faCog, faEdit, faTrash} from \"@fortawesome/free-solid-svg-icons\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport moment from \"moment\";\r\nimport {DeleteResourceModal} from \"../Modals/DeleteResourceModal\";\r\nimport {AppContext} from \"../../AppContext/AppContext\";\r\n\r\n/**\r\n * @typedef {Object} VehicleDetailsProps\r\n * @property {Vehicle} vehicle - the selected vehicle\r\n */\r\n/**\r\n * VehicleDetails component - renders all the information about a single vehicle\r\n * @param {VehicleDetailsProps} props\r\n * @returns {*}\r\n * @constructor\r\n */\r\nexport const VehicleDetails = props => {\r\n  const {vehicle} = props;\r\n\r\n  const {\r\n    bookings: vehicleBookings,\r\n    services: vehicleServices\r\n  } = vehicle;\r\n\r\n  const {deleteResource} = useContext(AppContext);\r\n\r\n  return (\r\n    <>\r\n      <Accordion>\r\n        <Card style={{overflow: 'visible'}}>\r\n          <Card.Header>\r\n            <Accordion.Toggle\r\n              className=\"mr-auto\"\r\n              as={Button}\r\n              variant=\"link\"\r\n              eventKey={`${vehicle.manufacturer} ${vehicle.model} (${vehicle.year})`}\r\n            >\r\n              {`${vehicle.manufacturer} ${vehicle.model} (${vehicle.year})`}\r\n            </Accordion.Toggle>\r\n            <ButtonGroup aria-label=\"Options\">\r\n              <Link\r\n                to={`/edit/${vehicle.id}`}\r\n                className=\"mr-3\"\r\n              >\r\n                <Button\r\n                  variant=\"outline-warning\"\r\n                >\r\n                  <FontAwesomeIcon icon={faEdit}/>\r\n                </Button>\r\n              </Link>\r\n              <Button\r\n                onClick={() => deleteResource.setDeleteResourceModalShow('vehicle', vehicle)}\r\n                className=\"mr-3\"\r\n                variant=\"outline-danger\">\r\n                <FontAwesomeIcon icon={faTrash}/>\r\n              </Button>\r\n              <Dropdown drop=\"right\">\r\n                <Dropdown.Toggle variant=\"outline-secondary\">\r\n                  <FontAwesomeIcon icon={faCog}/>\r\n                </Dropdown.Toggle>\r\n                <Dropdown.Menu>\r\n                  <Dropdown.Item\r\n                    as={Link}\r\n                    to={`/addService/${vehicle.id}`}>\r\n                    Add service\r\n                  </Dropdown.Item>\r\n                  <Dropdown.Item\r\n                    as={Link}\r\n                    to={`/addBooking/${vehicle.id}`}>\r\n                    Add booking\r\n                  </Dropdown.Item>\r\n                  <Dropdown.Item\r\n                    as={Link}\r\n                    to={`/addJourney/${vehicle.id}`}>\r\n                    Add journey\r\n                  </Dropdown.Item>\r\n                  <Dropdown.Item\r\n                    as={Link}\r\n                    to={`/addFuelPurchase/${vehicle.id}`}>\r\n                    Add fuel purchase\r\n                  </Dropdown.Item>\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </ButtonGroup>\r\n          </Card.Header>\r\n          <Accordion.Collapse\r\n            eventKey={`${vehicle.manufacturer} ${vehicle.model} (${vehicle.year})`}>\r\n            <Card.Body>\r\n              <ListGroup>\r\n                {\r\n                  Object.keys(\r\n                    vehicle.printDetails()\r\n                  )\r\n                    .map((field, index) => (\r\n                      <ListGroup.Item key={index}>\r\n                        {field}: {\r\n                        vehicle.printDetails()[field]\r\n                      }\r\n                      </ListGroup.Item>\r\n                    ))\r\n                }\r\n                <ListGroup.Item>\r\n                  Tank capacity: {vehicle.tankCapacity} L\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <Accordion>\r\n                    <Card>\r\n                      <Card.Header>\r\n                        <Accordion.Toggle\r\n                          className=\"mr-auto\"\r\n                          as={Button}\r\n                          variant=\"link\"\r\n                          eventKey=\"0\">\r\n                          Booking Records\r\n                        </Accordion.Toggle>\r\n                      </Card.Header>\r\n                      <Accordion.Collapse eventKey=\"0\">\r\n                        <Card.Body>\r\n                          {\r\n                            vehicleBookings &&\r\n                            vehicleBookings\r\n                              .sort((b1, b2) => (\r\n                                moment(b2.startDate).isBefore(moment(b1.startDate))\r\n                              ))\r\n                              .map((booking, index) => (\r\n                                <Accordion key={index}>\r\n                                  <Card>\r\n                                    <Card.Header>\r\n                                      <Accordion.Toggle\r\n                                        className=\"mr-auto\"\r\n                                        as={Button}\r\n                                        variant=\"link\"\r\n                                        eventKey={index}>\r\n                                        {`${new Date(booking.startDate).toLocaleDateString(\"en-AU\")} - ${new Date(booking.endDate).toLocaleDateString(\"en-AU\")}`}\r\n                                      </Accordion.Toggle>\r\n                                      <Button\r\n                                        onClick={() => deleteResource.setDeleteResourceModalShow('booking', booking)}\r\n                                        className=\"mr-3\"\r\n                                        variant=\"outline-danger\">\r\n                                        <FontAwesomeIcon icon={faTrash}/>\r\n                                      </Button>\r\n                                    </Card.Header>\r\n                                    <Accordion.Collapse eventKey={index}>\r\n                                      <Card.Body>\r\n                                        <ListGroup key={booking.id}>\r\n                                          <ListGroup.Item>\r\n                                            Start\r\n                                            Date: {new Date(booking.startDate).toLocaleDateString(\"en-AU\")}\r\n                                          </ListGroup.Item>\r\n                                          <ListGroup.Item>\r\n                                            End\r\n                                            Date: {new Date(booking.endDate).toLocaleDateString(\"en-AU\")}\r\n                                          </ListGroup.Item>\r\n                                          <ListGroup.Item>\r\n                                            Start\r\n                                            Odometer: {booking.startOdometer} km\r\n                                          </ListGroup.Item>\r\n                                          <ListGroup.Item>\r\n                                            Booking\r\n                                            Type: {booking.bookingType === 'D' ? 'Per day' : 'Per kilometer'}\r\n                                          </ListGroup.Item>\r\n                                          <ListGroup.Item>\r\n                                            Booking cost: {\r\n                                            `$ ${Number.parseFloat(booking.bookingCost).toFixed(2)}`\r\n                                            /*Number.isNaN(calculateBookingCost(booking, booking.journeys))\r\n                                              ?\r\n                                              'Pending (no journeys have' +\r\n                                              ' been made for this booking' +\r\n                                              ' yet)' :\r\n                                              `$ ${Number.parseFloat(calculateBookingCost(booking, booking.journeys)).toFixed(2)}`*/\r\n                                          }\r\n                                          </ListGroup.Item>\r\n                                        </ListGroup>\r\n                                      </Card.Body>\r\n                                    </Accordion.Collapse>\r\n                                  </Card>\r\n                                </Accordion>\r\n                              ))\r\n                          }\r\n                        </Card.Body>\r\n                      </Accordion.Collapse>\r\n                    </Card>\r\n                  </Accordion>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <Accordion>\r\n                    <Card>\r\n                      <Card.Header>\r\n                        <Accordion.Toggle\r\n                          className=\"mr-auto\"\r\n                          as={Button}\r\n                          variant=\"link\"\r\n                          eventKey=\"1\">\r\n                          Journey Records\r\n                        </Accordion.Toggle>\r\n                      </Card.Header>\r\n                      <Accordion.Collapse\r\n                        eventKey=\"1\">\r\n                        <Card.Body>\r\n                          {\r\n                            vehicle.bookings &&\r\n\t\t\t\t\t\t\t  vehicle\r\n\t\t\t\t\t\t\t\t.bookings\r\n\t\t\t\t\t\t\t\t.reduce((journeys, b) => {\r\n\t\t\t\t\t\t\t\t  b.journeys.forEach(j => {\r\n\t\t\t\t\t\t\t\t    journeys.push(j);\r\n\t\t\t\t\t\t\t\t  });\r\n\t\t\t\t\t\t\t\t  return journeys;\r\n\t\t\t\t\t\t\t\t}, [])\r\n                              .sort((journey1, journey2) => {\r\n                                const journey1StartedAt = new Date(journey1.journeyStartedAt);\r\n                                const journey2StartedAt = new Date(journey2.journeyStartedAt);\r\n                                if (journey1StartedAt > journey2StartedAt) {\r\n                                  return -1;\r\n                                } else if (journey1StartedAt < journey2StartedAt) {\r\n                                  return 1;\r\n                                }\r\n                                return 0;\r\n                              })\r\n                              .map((journey, index) => (\r\n                                <Accordion key={index}>\r\n                                  <Card>\r\n                                    <Card.Header>\r\n                                      <Accordion.Toggle\r\n                                        className=\"mr-auto\"\r\n                                        as={Button}\r\n                                        variant=\"link\"\r\n                                        eventKey={index}>\r\n                                        {`${new Date(journey.journeyStartedAt).toLocaleDateString(\"en-AU\")} - ${new Date(journey.journeyEndedAt).toLocaleDateString(\"en-AU\")}`}\r\n                                      </Accordion.Toggle>\r\n                                      <Button\r\n                                        onClick={() => deleteResource.setDeleteResourceModalShow('journey', journey)}\r\n                                        className=\"mr-3\"\r\n                                        variant=\"outline-danger\">\r\n                                        <FontAwesomeIcon icon={faTrash}/>\r\n                                      </Button>\r\n                                    </Card.Header>\r\n                                    <Accordion.Collapse eventKey={index}>\r\n                                      <Card.Body>\r\n                                        <ListGroup key={journey.id}>\r\n                                          <ListGroup.Item>\r\n                                            Journey started\r\n                                            at: {new Date(journey.journeyStartedAt).toLocaleDateString(\"en-AU\")}\r\n                                          </ListGroup.Item>\r\n                                          <ListGroup.Item>\r\n                                            Journey ended\r\n                                            at: {new Date(journey.journeyEndedAt).toLocaleDateString(\"en-AU\")}\r\n                                          </ListGroup.Item>\r\n                                          <ListGroup.Item>\r\n                                            Journey start odometer\r\n                                            reading: {journey.journeyStartOdometerReading} km\r\n                                          </ListGroup.Item>\r\n                                          <ListGroup.Item>\r\n                                            Journey end odometer\r\n                                            reading: {journey.journeyEndOdometerReading} km\r\n                                          </ListGroup.Item>\r\n                                          <ListGroup.Item>\r\n                                            Journey from: {journey.journeyFrom}\r\n                                          </ListGroup.Item>\r\n                                          <ListGroup.Item>\r\n                                            Journey to: {journey.journeyTo}\r\n                                          </ListGroup.Item>\r\n                                        </ListGroup>\r\n                                      </Card.Body>\r\n                                    </Accordion.Collapse>\r\n                                  </Card>\r\n                                </Accordion>\r\n                              ))\r\n                          }\r\n                        </Card.Body>\r\n                      </Accordion.Collapse>\r\n                    </Card>\r\n                  </Accordion>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <Accordion>\r\n                    <Card>\r\n                      <Card.Header>\r\n                        <Accordion.Toggle\r\n                          className=\"mr-auto\"\r\n                          as={Button}\r\n                          variant=\"link\"\r\n                          eventKey=\"2\">\r\n                          Service Records\r\n                        </Accordion.Toggle>\r\n                      </Card.Header>\r\n                      <Accordion.Collapse\r\n                        eventKey=\"2\">\r\n                        <Card.Body>\r\n                          {\r\n                            vehicleServices\r\n                              .sort((service1, service2) => {\r\n                                const service1At = new Date(service1.servicedAt);\r\n                                const service2At = new Date(service2.servicedAt);\r\n\r\n                                if (service1At > service2At) {\r\n                                  return -1;\r\n                                } else if (service1At > service2At) {\r\n                                  return 1;\r\n                                }\r\n                                return 0;\r\n                              })\r\n                              .map((service, index) => (\r\n                                <Accordion key={index}>\r\n                                  <Card key={service.id}>\r\n                                    <Card.Header>\r\n                                      <Accordion.Toggle\r\n                                        className=\"mr-auto\"\r\n                                        as={Button}\r\n                                        variant=\"link\"\r\n                                        eventKey={index}>\r\n                                        {new Date(service.servicedAt).toLocaleDateString(\"en-AU\")}\r\n                                      </Accordion.Toggle>\r\n                                      <Button\r\n                                        onClick={() => deleteResource.setDeleteResourceModalShow('service', service)}\r\n                                        className=\"mr-3\"\r\n                                        variant=\"outline-danger\">\r\n                                        <FontAwesomeIcon icon={faTrash}/>\r\n                                      </Button>\r\n                                    </Card.Header>\r\n                                    <Accordion.Collapse\r\n                                      eventKey={index}>\r\n                                      <Card.Body>\r\n                                        <ListGroup>\r\n                                          <ListGroup.Item>\r\n                                            Serviced\r\n                                            at: {new Date(service.servicedAt).toLocaleDateString(\"en-AU\")}\r\n                                          </ListGroup.Item>\r\n                                          <ListGroup.Item>\r\n                                            Service\r\n                                            odometer: {service.serviceOdometer} km\r\n                                          </ListGroup.Item>\r\n                                        </ListGroup>\r\n                                      </Card.Body>\r\n                                    </Accordion.Collapse>\r\n                                  </Card>\r\n                                </Accordion>\r\n                              ))\r\n                          }\r\n                        </Card.Body>\r\n                      </Accordion.Collapse>\r\n                    </Card>\r\n                  </Accordion>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <Accordion>\r\n                    <Card>\r\n                      <Card.Header>\r\n                        <Accordion.Toggle\r\n                          className=\"mr-auto\"\r\n                          as={Button}\r\n                          variant=\"link\"\r\n                          eventKey=\"3\">\r\n                          Fuel Purchase Records\r\n                        </Accordion.Toggle>\r\n                      </Card.Header>\r\n                      <Accordion.Collapse\r\n                        eventKey=\"3\">\r\n                        <Card.Body>\r\n                          {\r\n\t\t\t\t\t\t\tvehicle\r\n\t\t\t\t\t\t\t  .bookings\r\n\t\t\t\t\t\t\t  .reduce((fuelPurchases, b) => {\r\n\t\t\t\t\t\t\t\tb.fuelPurchases.forEach(f => {\r\n\t\t\t\t\t\t\t\t  fuelPurchases.push(f);\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\treturn fuelPurchases;\r\n\t\t\t\t\t\t\t  }, [])\r\n                              .sort((fuelPurchase1, fuelPurchase2) => {\r\n                                const bookingFuelPurchase1 = vehicleBookings.find(booking => booking.id === fuelPurchase1.bookingID);\r\n                                const booking1StartedAt = new Date(bookingFuelPurchase1.startDate);\r\n                                const bookingFuelPurchase2 = vehicleBookings.find(booking => booking.id === fuelPurchase2.bookingID);\r\n                                const booking2StartedAt = new Date(bookingFuelPurchase2.startDate);\r\n                                if (booking1StartedAt > booking2StartedAt) {\r\n                                  return -1;\r\n                                } else if (booking1StartedAt < booking2StartedAt) {\r\n                                  return 1;\r\n                                }\r\n                                return 0;\r\n                              })\r\n                              .map((fuelPurchase, index) => (\r\n                                <Accordion key={index}>\r\n                                  <Card>\r\n                                    <Card.Header>\r\n                                      <Accordion.Toggle\r\n                                        className=\"mr-auto\"\r\n                                        as={Button}\r\n                                        variant=\"link\"\r\n                                        eventKey={index}>\r\n                                        {`${new Date(vehicleBookings.find(booking => booking.id === fuelPurchase.bookingID).startDate).toLocaleDateString(\"en-AU\")} - ${new Date(vehicleBookings.find(booking => booking.id === fuelPurchase.bookingID).endDate).toLocaleDateString(\"en-AU\")}`}\r\n                                      </Accordion.Toggle>\r\n                                      <Button\r\n                                        onClick={() => deleteResource.setDeleteResourceModalShow('fuel purchase', fuelPurchase)}\r\n                                        className=\"mr-3\"\r\n                                        variant=\"outline-danger\">\r\n                                        <FontAwesomeIcon icon={faTrash}/>\r\n                                      </Button>\r\n                                    </Card.Header>\r\n                                    <Accordion.Collapse eventKey={index}>\r\n                                      <Card.Body>\r\n                                        <ListGroup key={fuelPurchase.id}>\r\n                                          <ListGroup.Item>\r\n                                            Fuel\r\n                                            quantity: {fuelPurchase.fuelQuantity} L\r\n                                          </ListGroup.Item>\r\n                                          <ListGroup.Item>\r\n                                            Fuel price (per litre):\r\n                                            $ {Number.parseFloat(fuelPurchase.fuelPrice).toFixed(2)}\r\n                                          </ListGroup.Item>\r\n                                          <ListGroup.Item>\r\n                                            Total cost:\r\n                                            $ {(Number.parseFloat(fuelPurchase.fuelQuantity) * Number.parseFloat(fuelPurchase.fuelPrice)).toFixed(2)}\r\n                                          </ListGroup.Item>\r\n                                        </ListGroup>\r\n                                      </Card.Body>\r\n                                    </Accordion.Collapse>\r\n                                  </Card>\r\n                                </Accordion>\r\n                              ))\r\n                          }\r\n                        </Card.Body>\r\n                      </Accordion.Collapse>\r\n                    </Card>\r\n                  </Accordion>\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n      </Accordion>\r\n      <DeleteResourceModal/>\r\n    </>\r\n  )\r\n}\r\n","/**\r\n * BrowseVehicle.js\r\n */\r\nimport React from 'react';\r\nimport {Col, Container, Row} from 'react-bootstrap'\r\nimport {LoadingSpinner} from \"../LoadingSpinner/LoadingSpinner\";\r\nimport {AppConsumer} from \"../../AppContext/AppContext\";\r\nimport {Notification} from \"../Notification/Notification\";\r\nimport {DeleteResourceModal} from \"../Modals/DeleteResourceModal\";\r\nimport {VehicleDetails} from \"../ShowVehicle/VehicleDetails\";\r\n\r\n/**\r\n * BrowseVehicle component - shows all vehicles\r\n * @returns {*}\r\n * @constructor\r\n */\r\nexport const BrowseVehicles = () => {\r\n  return (\r\n    <AppConsumer>\r\n      {\r\n        ({loading, vehicles, notification}) => (\r\n          <Container>\r\n            {\r\n              notification.display ?\r\n                (\r\n                  <Notification\r\n                    display={notification.display}\r\n                    message={notification.message}/>\r\n                ) : ''\r\n            }\r\n            <Row>\r\n              <Col>\r\n                <h2 className=\"text-center my-5\">All vehicles</h2>\r\n              </Col>\r\n            </Row>\r\n            <DeleteResourceModal/>\r\n            {\r\n              loading ?\r\n                (\r\n                  <Row className=\"justify-content-center mt-5\">\r\n                    <LoadingSpinner/>\r\n                  </Row>\r\n                ) :\r\n                (\r\n                  vehicles.map((v, i) => (\r\n                    <VehicleDetails\r\n                      key={i}\r\n                      vehicle={v}\r\n                    />\r\n                  ))\r\n                )\r\n            }\r\n          </Container>\r\n        )\r\n      }\r\n    </AppConsumer>\r\n  )\r\n};\r\n","/**\r\n * Service.js\r\n */\r\nimport moment from \"moment\";\r\n\r\n/**\r\n * Service model class\r\n * @class\r\n */\r\nexport class Service {\r\n  _id;\r\n  _vehicleID;\r\n  _serviceOdometer;\r\n  _servicedAt;\r\n  _createdAt;\r\n  _updatedAt;\r\n\r\n  /**\r\n   * Creates a new Service\r\n   * @param {string} vehicleID - ID of the vehicle associated with this service\r\n   * @param {number} serviceOdometer - odometer reading for this service\r\n   * @param {Date} servicedAt - when this service is due\r\n   * @param {string} id - ID of this service\r\n   * @param {string} createdAt - timestamp generated when this service is created\r\n   * @param {string|null} updatedAt - timestamp generated when this service is updated\r\n   */\r\n  constructor(vehicleID, serviceOdometer, servicedAt, id = require('uuid/v4')(), createdAt = moment().format('DD/MM/YYYY hh:mm:ss A'), updatedAt = null) {\r\n\tthis._id = id;\r\n\tthis._vehicleID = vehicleID;\r\n\tthis._serviceOdometer = serviceOdometer;\r\n\tthis._servicedAt = servicedAt;\r\n\tthis._createdAt = createdAt;\r\n\tthis._updatedAt = updatedAt;\r\n  }\r\n\r\n  get id() {\r\n\treturn this._id;\r\n  }\r\n\r\n  set id(value) {\r\n\tthis._id = value;\r\n  }\r\n\r\n  get vehicleID() {\r\n\treturn this._vehicleID;\r\n  }\r\n\r\n  set vehicleID(value) {\r\n\tthis._vehicleID = value;\r\n  }\r\n\r\n  get serviceOdometer() {\r\n\treturn this._serviceOdometer;\r\n  }\r\n\r\n  set serviceOdometer(value) {\r\n\tthis._serviceOdometer = value;\r\n  }\r\n\r\n  get servicedAt() {\r\n\treturn this._servicedAt;\r\n  }\r\n\r\n  set servicedAt(value) {\r\n\tthis._servicedAt = value;\r\n  }\r\n\r\n  get createdAt() {\r\n\treturn this._createdAt;\r\n  }\r\n\r\n  set createdAt(value) {\r\n\tthis._createdAt = value;\r\n  }\r\n\r\n  get updatedAt() {\r\n\treturn this._updatedAt;\r\n  }\r\n\r\n  set updatedAt(value) {\r\n\tthis._updatedAt = value;\r\n  }\r\n\r\n  /**\r\n   * Gets the number of services done up to today\r\n   * @param {Array<Service>} services - full list of services to be scanned\r\n   * @returns {number} numberOfServicesDone - number of services done up to this date\r\n   */\r\n  static getTotalServicesDone = services => {\r\n\treturn services.filter(s => moment(s.servicedAt).isBefore(moment())).length;\r\n  };\r\n\r\n  /**\r\n   * Gets the {@link serviceOdometer} of the latest service done up to this date\r\n   * @param {Array<Service>} services - full list of services to be scanned\r\n   * @returns {string|number} serviceOdometer - the latest service odometer reading or an error\r\n   * message, when no services in {@link services} have been made before this date\r\n   */\r\n  static getLastServiceOdometerReading = services => {\r\n\tif (services.length) {\r\n\t  const now = moment();\r\n\t  const servicesCopy = [...services];\r\n\t  const firstServicesBeforeToday = servicesCopy.sort((firstService, secondService) => {\r\n\t\tconst firstServiceDate = moment(firstService.servicedAt);\r\n\t\tconst secondServiceDate = moment(secondService.servicedAt);\r\n\t\treturn secondServiceDate.diff(firstServiceDate, 'days');\r\n\t  }).find(s => moment(s.servicedAt).isBefore(now));\r\n\r\n\t  if (firstServicesBeforeToday) {\r\n\t\treturn firstServicesBeforeToday.serviceOdometer;\r\n\t  }\r\n\t  return 'No services have been scheduled before today'\r\n\t}\r\n\treturn 'No services have been scheduled yet';\r\n  };\r\n\r\n  /**\r\n   * Determines whether there a service due\r\n   * @param {Array<Service>} services - full list of services to be scanned\r\n   * @returns {boolean} serviceDue\r\n   */\r\n  static requiresService = services => {\r\n\treturn services.some(service => moment(service.servicedAt).isSameOrAfter(moment(), 'days'));\r\n  }\r\n}\r\n","/**\r\n * Firebase.js\r\n */\r\nimport firebase from 'firebase';\r\n\r\n/**\r\n * Basic configuration object to connect to firebase\r\n * @type {{storageBucket: *, apiKey: *, messagingSenderId: *, appId: *, projectId: string, databaseURL: *, authDomain: *}}\r\n */\r\nconst config = {\r\n  apiKey: process.env.API_KEY || 'AIzaSyBN2bR0_A7pSJQ3W-yU8_e8jgfj1HVHg98',\r\n  authDomain: process.env.AUTH_DOMAIN || 'car-rental-system-725f7.firebaseapp.com',\r\n  databaseURL: process.env.DATABASE_URL || 'https://car-rental-system-725f7.firebaseio.com',\r\n  projectId: process.env.PROJECT_ID || 'car-rental-system-725f7',\r\n  storageBucket: process.env.STORAGE_BUCKET || 'car-rental-system-725f7.appspot.com',\r\n  messagingSenderId: process.env.MESSAGING_SENDER_ID || '533494537845',\r\n  appId: process.env.APP_ID || '533494537845:web:8886eede71aaf00dde623c'\r\n};\r\n\r\nfirebase.initializeApp(config);\r\n\r\nexport { firebase };\r\n","/**\r\n * Vehicle.js\r\n */\r\nimport moment from \"moment\";\r\nimport {Service} from \"./Service\";\r\nimport {firebase} from \"../Firebase/Firebase\";\r\n\r\n/**\r\n * Vehicle model class\r\n * @class\r\n */\r\nexport class Vehicle {\r\n  _id;\r\n  _manufacturer;\r\n  _model;\r\n  _year;\r\n  _odometerReading;\r\n  _registrationNumber;\r\n  _tankCapacity;\r\n  _fuelEconomy;\r\n  _bookings = [];\r\n  _services = [];\r\n  _createdAt;\r\n  _updatedAt;\r\n\r\n\r\n  /**\r\n   * Creates a new Vehicle\r\n   * @param {string} manufacturer - manufacturer brand of this vehicle\r\n   * @param {string} model - model of this vehicle\r\n   * @param {number} year - year of this vehicle\r\n   * @param {number} odometerReading - odometer reading of this vehicle\r\n   * @param {string} registrationNumber - registration number of this vehicle\r\n   * @param {number} tankCapacity - tank capacity of this vehicle\r\n   * @param {string} id - ID of this vehicle\r\n   * @param {string} createdAt - timestamp generated when this vehicle is created\r\n   * @param {string|null} updatedAt - timestamp generated when this vehicle is updated\r\n   */\r\n  constructor(manufacturer, model, year, odometerReading, registrationNumber, tankCapacity, id = require('uuid/v4')(), createdAt = moment().format('DD/MM/YYYY hh:mm:ss A'), updatedAt = null) {\r\n    this._id = id;\r\n    this._manufacturer = manufacturer;\r\n    this._model = model;\r\n    this._year = year;\r\n    this._odometerReading = odometerReading;\r\n    this._registrationNumber = registrationNumber;\r\n    this._tankCapacity = tankCapacity;\r\n    this._fuelEconomy = this.calculateFuelEconomy();\r\n    this._createdAt = createdAt;\r\n    this._updatedAt = updatedAt;\r\n  }\r\n\r\n  /**\r\n   * Adds a new booking to {@link bookings}\r\n   * @param {Booking} newBooking - new booking to be added to {@link bookings}\r\n   */\r\n  addBooking(newBooking) {\r\n    this.bookings.push(newBooking);\r\n  }\r\n\r\n  /**\r\n   * Removes a booking from {@link bookings} by its ID\r\n   * @param {string} bookingID - the ID of the booking to be removed\r\n   */\r\n  removeBookingByID(bookingID) {\r\n    if (bookingID) {\r\n      const bookingsCopy = [...this.bookings];\r\n      const bookingToBeDeleted = bookingsCopy.find(booking => booking.id === bookingID);\r\n\r\n      if (bookingToBeDeleted) {\r\n        this.bookings = bookingsCopy.filter(booking => booking.id !== bookingToBeDeleted.id);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Removes a journey from {@link journeys} by its associated bookingID\r\n   * @param {Journey} journey - the journey to be removed\r\n   * @param {string} bookingID - the ID of the booking that contains the journey to be removed\r\n   */\r\n  removeJourneyByBookingID(journey, bookingID) {\r\n    this.bookings.find(b => b.id === bookingID).removeJourney(journey);\r\n  }\r\n\r\n  /**\r\n   * Adds a new journey to {@link journeys}\r\n   * @param {Journey} newJourney - the new journey to be added\r\n   */\r\n  addJourney(newJourney) {\r\n    this.bookings.find(b => b.id === newJourney.bookingID).addJourney(newJourney);\r\n  }\r\n\r\n  /**\r\n   * Adds a new service to {@link services}\r\n   * @param {Service} newService - new service to be added\r\n   */\r\n  addService(newService) {\r\n    this.services.push(newService);\r\n  }\r\n\r\n  removeServiceByID(serviceID) {\r\n    if (serviceID) {\r\n      const servicesCopy = [...this.services];\r\n      const serviceToBeDeleted = servicesCopy.find(service => service.id === serviceID);\r\n\r\n      if (serviceToBeDeleted) {\r\n        this.services = servicesCopy.filter(service => service.id !== serviceToBeDeleted.id);\r\n      }\r\n    }\r\n  }\r\n\r\n  addFuelPurchase(newFuelPurchase) {\r\n    this.bookings.find(b => b.id === newFuelPurchase.bookingID).addFuelPurchase(newFuelPurchase);\r\n  }\r\n\r\n  removeFuelPurchaseByBookingID(fuelPurchase, bookingID) {\r\n    this.bookings.find(b => b.id === bookingID).removeFuelPurchase(fuelPurchase);\r\n  }\r\n\r\n  get bookings() {\r\n    return this._bookings;\r\n  }\r\n\r\n  set bookings(value) {\r\n    this._bookings = value;\r\n  }\r\n\r\n  get journeys() {\r\n    return this._bookings.reduce((journeys, b) => {\r\n      b.journeys.forEach(j => {\r\n        journeys.push(j);\r\n      });\r\n      return journeys;\r\n    }, []);\r\n  }\r\n\r\n  get services() {\r\n    return this._services;\r\n  }\r\n\r\n  set services(value) {\r\n    this._services = value;\r\n  }\r\n\r\n  get fuelPurchases() {\r\n    return this._fuelPurchases;\r\n  }\r\n\r\n  set fuelPurchases(value) {\r\n    this._fuelPurchases = value;\r\n  }\r\n\r\n  get id() {\r\n    return this._id;\r\n  }\r\n\r\n  set id(value) {\r\n    this._id = value;\r\n  }\r\n\r\n  get manufacturer() {\r\n    return this._manufacturer;\r\n  }\r\n\r\n  set manufacturer(value) {\r\n    this._manufacturer = value;\r\n  }\r\n\r\n  get model() {\r\n    return this._model;\r\n  }\r\n\r\n  set model(value) {\r\n    this._model = value;\r\n  }\r\n\r\n  get year() {\r\n    return this._year;\r\n  }\r\n\r\n  set year(value) {\r\n    this._year = value;\r\n  }\r\n\r\n  get odometerReading() {\r\n    return this._odometerReading;\r\n  }\r\n\r\n  set odometerReading(value) {\r\n    this._odometerReading = value;\r\n  }\r\n\r\n  get registrationNumber() {\r\n    return this._registrationNumber;\r\n  }\r\n\r\n  set registrationNumber(value) {\r\n    this._registrationNumber = value;\r\n  }\r\n\r\n  get tankCapacity() {\r\n    return this._tankCapacity;\r\n  }\r\n\r\n  set tankCapacity(value) {\r\n    this._tankCapacity = value;\r\n  }\r\n\r\n  get createdAt() {\r\n    return this._createdAt;\r\n  }\r\n\r\n  set createdAt(value) {\r\n    this._createdAt = value;\r\n  }\r\n\r\n  get updatedAt() {\r\n    return this._updatedAt;\r\n  }\r\n\r\n  set updatedAt(value) {\r\n    this._updatedAt = value;\r\n  }\r\n\r\n  /**\r\n   * Returns an object that contains all details of this vehicle in a readable format\r\n   * @returns {{Vehicle: string, \"Revenue recorded\": string|number, \"Kilometers since the last service\": (string|*), \"Requires service\": (string), \"Total services done\": *, \"Total Kilometers Travelled\": string, \"Registration Number\": *}}\r\n   */\r\n  printDetails() {\r\n    return ({\r\n      'Vehicle': `${this.manufacturer} ${this.model} (${this.year})`,\r\n      'Registration Number': this.registrationNumber,\r\n      'Total Kilometers Travelled': `${this.odometerReading} km`,\r\n      'Total services done': Service.getTotalServicesDone(this.services),\r\n      'Revenue recorded': `$ ${Number.parseFloat(this.calculateRevenueRecorded()).toFixed(2)}`,\r\n      'Kilometers since the last service': Number.parseFloat(Service.getLastServiceOdometerReading(this.services)) ? `${this.odometerReading - Service.getLastServiceOdometerReading(this.services)} km` : Service.getLastServiceOdometerReading(this.services),\r\n      'Fuel economy': `${this.calculateFuelEconomy()}`,\r\n      'Requires service': Service.requiresService(this.services) ? 'Yes' : 'No'\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Calculates total revenue associated with this vehicle based on its bookings\r\n   * @returns {number} totalRevenue - total revenue recorded for this vehicle\r\n   */\r\n  calculateRevenueRecorded() {\r\n    return this.bookings.reduce((total, b) => {\r\n      if (Number.parseFloat(b.bookingCost)) {\r\n        total += b.bookingCost;\r\n      }\r\n      return total;\r\n    }, 0);\r\n  }\r\n\r\n  /**\r\n   * Calculates the fuel economy for this vehicle by dividing the total cost of all fuel purchases by\r\n   * the total distance travelled across all recorded journeys\r\n   * @returns {string} fuelEconomy - The fuel economy in a readable format\r\n   */\r\n  calculateFuelEconomy() {\r\n    const fuelPurchases =\r\n      this.bookings.reduce((fuelPurchases, booking) => {\r\n        fuelPurchases.push(...booking.fuelPurchases);\r\n        return fuelPurchases;\r\n      }, []);\r\n\r\n    const totalFuelPurchaseCost = fuelPurchases.reduce((totalCost, fuelPurchase) => {\r\n      totalCost += fuelPurchase.fuelPrice * fuelPurchase.fuelQuantity;\r\n      return totalCost;\r\n    }, 0);\r\n\r\n    const totalDistanceTravelled = this.calculateTotalDistanceTravelled();\r\n\r\n    if (Number.isNaN(totalFuelPurchaseCost) || Number.isNaN(totalDistanceTravelled) || !Number.isFinite((totalFuelPurchaseCost / totalDistanceTravelled))) {\r\n      return 'Not enough data recorded to calculate fuel economy';\r\n    }\r\n    const fuelEconomy = (totalFuelPurchaseCost / totalDistanceTravelled);\r\n    return `${(fuelEconomy * 100).toFixed(2)} L / 100 km `\r\n  }\r\n\r\n  /**\r\n   * Calculates the total distance travelled by this vehicle for all recorded journeys\r\n   * @returns {number} totalDistance - The total distance travelled\r\n   */\r\n  calculateTotalDistanceTravelled() {\r\n    return (\r\n      this.bookings.reduce((totalDistance, booking) => {\r\n        booking.journeys.forEach(j => {\r\n          totalDistance += j.journeyEndOdometerReading - j.journeyStartOdometerReading\r\n        }, 0);\r\n        return totalDistance;\r\n      }, 0)\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Updates this vehicle's odometer based on its journeys\r\n   * @param {Function} callback - runs after the vehicle has been updated on firebase\r\n   */\r\n  updateVehicleOdometer(callback) {\r\n    // get all journeys\r\n    if (this.bookings.length) {\r\n      const journeys = this.bookings.reduce((j, b) => {\r\n        if (b.journeys.length) {\r\n          j.push(...b.journeys);\r\n        }\r\n        return j;\r\n      }, []);\r\n\r\n      // if a journey is scheduled for today and the vehicle's odometer reading at the end is greater than the current vehicle's odometer reading, update vehicle odometer\r\n      const todaysJourney = journeys.find(j => moment(j.journeyEndedAt).isSame(moment(), 'days'));\r\n\r\n      if (todaysJourney && todaysJourney.journeyEndOdometerReading > this.odometerReading) {\r\n        this.odometerReading = todaysJourney.journeyEndOdometerReading;\r\n\r\n        // update vehicle on firebase\r\n        const db = firebase.firestore();\r\n        db\r\n          .collection('vehicles')\r\n          .doc(this.id)\r\n          .update({\r\n            '_odometerReading': this.odometerReading,\r\n            '_updatedAt': moment().format('DD/MM/YYYY hh:mm:ss a')\r\n          })\r\n          .then(callback)\r\n          .catch(console.dir)\r\n      }\r\n    }\r\n  }\r\n}\r\n","/**\r\n * VehicleForm.js\r\n */\r\nimport React, {useContext, useRef} from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport {Button, Col, Container, Form, Row} from \"react-bootstrap\";\r\nimport {Notification} from \"../Notification/Notification\";\r\nimport {LoadingSpinner} from \"../LoadingSpinner/LoadingSpinner\";\r\nimport {Formik} from \"formik\";\r\nimport moment from \"moment\";\r\nimport {AppContext} from \"../../AppContext/AppContext\";\r\nimport * as yup from \"yup\";\r\n\r\n/**\r\n * Schema to validate VehicleForm\r\n * @type {Schema}\r\n */\r\nconst schema = yup.object().shape({\r\n  manufacturer: yup.string().trim().required('This field is required'),\r\n  model: yup.string().trim().required('This field is required'),\r\n  year: yup\r\n\t.number()\r\n\t.min(moment().subtract(70, 'years').get(\"year\"), 'Too old')\r\n\t.max(\r\n\t  moment()\r\n\t\t.add(1, 'year')\r\n\t\t.get('year'),\r\n\t  'Invalid year'\r\n\t),\r\n  registrationNumber: yup\r\n\t.string()\r\n\t.trim()\r\n\t.length(7, '7 characters are required')\r\n\t.matches(/^[A-Za-z0-9]{7}$/, 'Only letters and numbers are valid')\r\n\t.required('This field is required'),\r\n  odometerReading: yup.number().min(0, 'Invalid reading').required('This field is required'),\r\n  tankCapacity: yup.number().min(0, 'Invalid tank capacity')\r\n});\r\n\r\n/**\r\n * @typedef {Object} VehicleFormProps\r\n * @property {string} type - one of: \"add\" or \"edit\"\r\n * @property {Vehicle} vehicle - the vehicle to be edited, if {@link type} === \"edit\"\r\n * @property {Function} handleSubmit - fired on submission if all form fields are valid\r\n */\r\n/**\r\n * VehicleForm component - provides a form for the user to add or edit a vehicle\r\n * @param {VehicleFormProps} props\r\n * @returns {*}\r\n * @constructor\r\n */\r\nexport const VehicleForm = props => {\r\n  const {loading, notification} = useContext(AppContext);\r\n  const history = useHistory();\r\n  const manufacturerInputRef = useRef(null);\r\n  let {vehicle, handleSubmit, type} = props;\r\n\r\n  return (\r\n\t<Container>\r\n\t  {\r\n\t\tnotification && notification.display ?\r\n\t\t  (\r\n\t\t\t<Notification\r\n\t\t\t  display={notification.display}\r\n\t\t\t  message={notification.message}/>\r\n\t\t  ) : ''\r\n\t  }\r\n\t  <Row>\r\n\t\t<Col>\r\n\r\n\t\t\t{\r\n\t\t\t  type === 'add' ?\r\n\t\t\t\t(\r\n\t\t\t\t  <h2 className=\"text-center my-5\">Add a new vehicle</h2>\r\n\t\t\t\t)\r\n\t\t\t\t:\r\n\t\t\t\t(\r\n\t\t\t\t  <h2 className=\"text-center my-5\">\r\n\t\t\t\t\tEdit\r\n\t\t\t\t\tvehicle: {vehicle ? `${vehicle.manufacturer} ${vehicle.model} (${vehicle.year})` : ``}\r\n\t\t\t\t  </h2>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t</Col>\r\n\t  </Row>\r\n\t  {\r\n\t\tloading ?\r\n\t\t  (\r\n\t\t\t<Row className=\"justify-content-center mt-5\">\r\n\t\t\t  <LoadingSpinner/>\r\n\t\t\t</Row>\r\n\t\t  )\r\n\t\t  :\r\n\t\t  (\r\n\t\t\t<Formik\r\n\t\t\t  validationSchema={schema}\r\n\t\t\t  onSubmit={(values) => handleSubmit(values)}\r\n\t\t\t  initialValues={{\r\n\t\t\t\tmanufacturer: vehicle ? vehicle.manufacturer : ``,\r\n\t\t\t\tmodel: vehicle ? vehicle.model : ``,\r\n\t\t\t\tyear: vehicle ? vehicle.year : ``,\r\n\t\t\t\tregistrationNumber: vehicle ? vehicle.registrationNumber : ``,\r\n\t\t\t\todometerReading: vehicle ? vehicle.odometerReading : ``,\r\n\t\t\t\ttankCapacity: vehicle ? vehicle.tankCapacity : ``\r\n\t\t\t  }}\r\n\t\t\t>\r\n\t\t\t  {({\r\n\t\t\t\t  handleSubmit,\r\n\t\t\t\t  handleChange,\r\n\t\t\t\t  resetForm,\r\n\t\t\t\t  values,\r\n\t\t\t\t  touched,\r\n\t\t\t\t  errors,\r\n\t\t\t\t  isSubmitting\r\n\t\t\t\t}) => (\r\n\t\t\t\t<Form noValidate onSubmit={handleSubmit}>\r\n\t\t\t\t  <Form.Row className=\"mb-lg-3\">\r\n\t\t\t\t\t<Form.Group as={Col} controlId=\"manufacturer\" lg=\"4\" md=\"12\">\r\n\t\t\t\t\t  <Form.Label>Manufacturer:<span className=\"text-danger\">*</span></Form.Label>\r\n\t\t\t\t\t  <Form.Control\r\n\t\t\t\t\t\tref={manufacturerInputRef}\r\n\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\tname=\"manufacturer\"\r\n\t\t\t\t\t\tvalue={values.manufacturer}\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tplaceholder=\"Manufacturer...\"\r\n\t\t\t\t\t\tisInvalid={!!errors.manufacturer}\r\n\t\t\t\t\t\tisValid={touched.manufacturer && !errors.manufacturer}\r\n\t\t\t\t\t  />\r\n\t\t\t\t\t  <Form.Control.Feedback type=\"invalid\">\r\n\t\t\t\t\t\t{errors.manufacturer}\r\n\t\t\t\t\t  </Form.Control.Feedback>\r\n\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t\t<Form.Group as={Col} controlId=\"model\" lg=\"4\" md=\"12\">\r\n\t\t\t\t\t  <Form.Label>Model:<span className=\"text-danger\">*</span></Form.Label>\r\n\t\t\t\t\t  <Form.Control\r\n\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\tname=\"model\"\r\n\t\t\t\t\t\tvalue={values.model}\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tplaceholder=\"Model...\"\r\n\t\t\t\t\t\tisValid={touched.model && !errors.model}\r\n\t\t\t\t\t\tisInvalid={!!errors.model}\r\n\t\t\t\t\t  />\r\n\t\t\t\t\t  <Form.Control.Feedback type=\"invalid\">\r\n\t\t\t\t\t\t{errors.model}\r\n\t\t\t\t\t  </Form.Control.Feedback>\r\n\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t\t<Form.Group as={Col} controlId=\"year\" lg=\"4\" md=\"12\">\r\n\t\t\t\t\t  <Form.Label>Year:</Form.Label>\r\n\t\t\t\t\t  <Form.Control\r\n\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\tname=\"year\"\r\n\t\t\t\t\t\tvalue={values.year}\r\n\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\tmin={moment().subtract(60, 'years').get(\"year\")}\r\n\t\t\t\t\t\tmax={moment().add(1, 'year').get(\"year\")}\r\n\t\t\t\t\t\tstep=\"1\"\r\n\t\t\t\t\t\tplaceholder=\"Year...\"\r\n\t\t\t\t\t\tisValid={touched.year && !errors.year}\r\n\t\t\t\t\t\tisInvalid={!!errors.year}\r\n\t\t\t\t\t  />\r\n\t\t\t\t\t  <Form.Control.Feedback type=\"invalid\">\r\n\t\t\t\t\t\t{errors.year}\r\n\t\t\t\t\t  </Form.Control.Feedback>\r\n\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t  </Form.Row>\r\n\t\t\t\t  <Form.Row className=\"mb-lg-3\">\r\n\t\t\t\t\t<Form.Group as={Col} controlId=\"registrationNumber\" lg=\"6\" md=\"12\">\r\n\t\t\t\t\t  <Form.Label>Registration Number:<span\r\n\t\t\t\t\t\tclassName=\"text-danger\">*</span></Form.Label>\r\n\t\t\t\t\t  <Form.Control\r\n\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\tname=\"registrationNumber\"\r\n\t\t\t\t\t\tvalue={values.registrationNumber}\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tplaceholder=\"Registration Number...\"\r\n\t\t\t\t\t\tisValid={touched.registrationNumber && !errors.registrationNumber}\r\n\t\t\t\t\t\tisInvalid={!!errors.registrationNumber}\r\n\t\t\t\t\t  />\r\n\t\t\t\t\t  <Form.Control.Feedback type=\"invalid\">\r\n\t\t\t\t\t\t{errors.registrationNumber}\r\n\t\t\t\t\t  </Form.Control.Feedback>\r\n\t\t\t\t\t</Form.Group>\r\n\t\t\t\t  </Form.Row>\r\n\r\n\t\t\t\t  <Form.Row className=\"mb-lg-3\">\r\n\t\t\t\t\t<Form.Group as={Col} controlId=\"odometerReading\" lg=\"6\" md=\"12\">\r\n\t\t\t\t\t  <Form.Label>Odometer Reading (in kilometres):<span\r\n\t\t\t\t\t\tclassName=\"text-danger\">*</span></Form.Label>\r\n\t\t\t\t\t  <Form.Control\r\n\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\tname=\"odometerReading\"\r\n\t\t\t\t\t\tvalue={values.odometerReading}\r\n\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\tplaceholder=\"Odometer Reading...\"\r\n\t\t\t\t\t\tisValid={touched.odometerReading && !errors.odometerReading}\r\n\t\t\t\t\t\tisInvalid={!!errors.odometerReading}\r\n\t\t\t\t\t  />\r\n\t\t\t\t\t  <Form.Control.Feedback type=\"invalid\">\r\n\t\t\t\t\t\t{errors.odometerReading}\r\n\t\t\t\t\t  </Form.Control.Feedback>\r\n\t\t\t\t\t</Form.Group>\r\n\t\t\t\t  </Form.Row>\r\n\r\n\t\t\t\t  <Form.Row className=\"mb-lg-5\">\r\n\t\t\t\t\t<Form.Group as={Col} controlId=\"tankCapacity\" lg=\"6\" md=\"12\">\r\n\t\t\t\t\t  <Form.Label>Tank Capacity (in litres):</Form.Label>\r\n\t\t\t\t\t  <Form.Control\r\n\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\tname=\"tankCapacity\"\r\n\t\t\t\t\t\tvalue={values.tankCapacity}\r\n\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\tplaceholder=\"Tank Capacity...\"\r\n\t\t\t\t\t\tisValid={touched.tankCapacity && !errors.tankCapacity}\r\n\t\t\t\t\t\tisInvalid={!!errors.tankCapacity}\r\n\t\t\t\t\t  />\r\n\t\t\t\t\t  <Form.Control.Feedback type=\"invalid\">\r\n\t\t\t\t\t\t{errors.tankCapacity}\r\n\t\t\t\t\t  </Form.Control.Feedback>\r\n\t\t\t\t\t</Form.Group>\r\n\t\t\t\t  </Form.Row>\r\n\t\t\t\t  <Row className=\"justify-content-center\">\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t  variant=\"primary\"\r\n\t\t\t\t\t  size=\"lg\"\r\n\t\t\t\t\t  type=\"submit\"\r\n\t\t\t\t\t  className=\"mr-5\"\r\n\t\t\t\t\t  disabled={isSubmitting}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t  {\r\n\t\t\t\t\t\ttype === 'add' ? `Add vehicle` : `Edit vehicle`\r\n\t\t\t\t\t  }\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t  variant=\"warning\"\r\n\t\t\t\t\t  size=\"lg\"\r\n\t\t\t\t\t  className=\"mr-5\"\r\n\t\t\t\t\t  onClick={() => {\r\n\t\t\t\t\t\tresetForm();\r\n\t\t\t\t\t\tmanufacturerInputRef.current.focus()\r\n\t\t\t\t\t  }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t  {\r\n\t\t\t\t\t    type === 'add' ? `Clear` : `Restore`\r\n\t\t\t\t\t  }\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t  variant=\"danger\"\r\n\t\t\t\t\t  size=\"lg\"\r\n\t\t\t\t\t  onClick={() => history.push(`/browse`)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t  Cancel\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t  </Row>\r\n\t\t\t\t</Form>\r\n\t\t\t  )}\r\n\t\t\t</Formik>\r\n\t\t  )\r\n\t  }\r\n\t</Container>\r\n  )\r\n};\r\n","/**\r\n * AddVehicle.js\r\n */\r\nimport React, {useContext} from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport {AppContext} from \"../../AppContext/AppContext\";\r\nimport {Vehicle} from \"../../Models/Vehicle\";\r\nimport {VehicleForm} from \"../VehicleForm/VehicleForm\";\r\n\r\n/**\r\n *\r\n * @returns {*}\r\n * @constructor\r\n */\r\nexport const AddVehicle = () => {\r\n  const {addResource} = useContext(AppContext);\r\n  const history = useHistory();\r\n\r\n  return (\r\n\t<VehicleForm\r\n\t  type=\"add\"\r\n\t  handleSubmit={values => {\r\n\t\tconst {manufacturer, model, year, odometerReading, registrationNumber, tankCapacity} = values;\r\n\t\tconst vehicleToBeAdded = new Vehicle(manufacturer, model, year, odometerReading, registrationNumber, tankCapacity);\r\n\r\n\t\taddResource('vehicle', vehicleToBeAdded);\r\n\t\thistory.push(`/show/${vehicleToBeAdded.id}`);\r\n\t  }}/>\r\n  )\r\n};\r\n","/**\r\n * EditVehicle.js\r\n */\r\nimport React, {useContext} from 'react';\r\nimport {useHistory, useParams} from 'react-router-dom';\r\nimport {AppContext} from \"../../AppContext/AppContext\";\r\nimport {Vehicle} from \"../../Models/Vehicle\";\r\nimport moment from \"moment\";\r\nimport {VehicleForm} from \"../VehicleForm/VehicleForm\";\r\n\r\nconst cloneDeep = require('lodash.clonedeep');\r\n\r\n/**\r\n * EditVehicle component - renders a form to edit a vehicle\r\n * @returns {*}\r\n * @constructor\r\n */\r\nexport const EditVehicle = () => {\r\n  const {vehicles, editVehicle} = useContext(AppContext);\r\n  const history = useHistory();\r\n  const {vehicleID} = useParams();\r\n\r\n  const vehicleToBeEdited = vehicles.find(v => v.id === vehicleID);\r\n  let vehicle = cloneDeep(vehicleToBeEdited);\r\n\r\n  return (\r\n\t<VehicleForm\r\n\t  type=\"edit\"\r\n\t  vehicle={vehicle}\r\n\t  handleSubmit={values => {\r\n\t\tfor (let field in values) {\r\n\t\t  if (vehicle.hasOwnProperty(`_${field}`)) {\r\n\t\t\tvehicle[field] = values[field];\r\n\t\t  }\r\n\t\t}\r\n\t\tvehicle.updatedAt = moment().format('DD/MM/YYYY hh:mm:ss A');\r\n\t\teditVehicle(vehicle);\r\n\t\thistory.push(`/show/${vehicle.id}`);\r\n\t  }}\r\n\t/>\r\n  )\r\n};\r\n","/**\r\n * Booking.js\r\n */\r\nimport moment from \"moment\";\r\n\r\n/**\r\n * Booking model class\r\n * @class\r\n */\r\nexport class Booking {\r\n  _id;\r\n  _vehicleID;\r\n  _bookingType;\r\n  _journeys = [];\r\n  _fuelPurchases = [];\r\n  _bookingCost;\r\n  _startDate;\r\n  _endDate;\r\n  _startOdometer;\r\n  _createdAt;\r\n  _updatedAt;\r\n\r\n  /**\r\n   * Creates a new Booking\r\n   * @param {string} vehicleID - ID of the vehicle associated with this booking\r\n   * @param {string} bookingType - one of: \"D\" (per day) or \"K\" (per kilometre)\r\n   * @param {Date} startDate - booking start date in the format YYYY-MM-DD\r\n   * @param {Date} endDate - booking end date in the format YYYY-MM-DD\r\n   * @param {number} startOdometer - initial odometer reading of the vehicle\r\n   * @param {number} id - ID of this booking\r\n   * @param {string} createdAt - timestamp generated when this booking is created\r\n   * @param {string|null} updatedAt - timestamp generated when this booking is updated\r\n   */\r\n  constructor(vehicleID, bookingType, startDate, endDate, startOdometer, id = require('uuid/v4')(), createdAt = moment().format('DD/MM/YYYY hh:mm:ss A'), updatedAt = null) {\r\n\tthis._id = id;\r\n\tthis._vehicleID = vehicleID;\r\n\tthis._bookingType = bookingType;\r\n\tthis._startDate = startDate;\r\n\tthis._endDate = endDate;\r\n\tthis._startOdometer = startOdometer;\r\n\tthis._createdAt = createdAt;\r\n\tthis._updatedAt = updatedAt;\r\n\tthis._bookingCost = this.calculateBookingCost();\r\n  }\r\n\r\n  get id() {\r\n\treturn this._id;\r\n  }\r\n\r\n  set id(value) {\r\n\tthis._id = value;\r\n  }\r\n\r\n  get vehicleID() {\r\n\treturn this._vehicleID;\r\n  }\r\n\r\n  set vehicleID(value) {\r\n\tthis._vehicleID = value;\r\n  }\r\n\r\n  get bookingType() {\r\n\treturn this._bookingType;\r\n  }\r\n\r\n  set bookingType(value) {\r\n\tthis._bookingType = value;\r\n  }\r\n\r\n  get startDate() {\r\n\treturn this._startDate;\r\n  }\r\n\r\n  set startDate(value) {\r\n\tthis._startDate = value;\r\n  }\r\n\r\n  get endDate() {\r\n\treturn this._endDate;\r\n  }\r\n\r\n  set endDate(value) {\r\n\tthis._endDate = value;\r\n  }\r\n\r\n  get startOdometer() {\r\n\treturn this._startOdometer;\r\n  }\r\n\r\n  set startOdometer(value) {\r\n\tthis._startOdometer = value;\r\n  }\r\n\r\n  get createdAt() {\r\n\treturn this._createdAt;\r\n  }\r\n\r\n  set createdAt(value) {\r\n\tthis._createdAt = value;\r\n  }\r\n\r\n  get updatedAt() {\r\n\treturn this._updatedAt;\r\n  }\r\n\r\n  set updatedAt(value) {\r\n\tthis._updatedAt = value;\r\n  }\r\n\r\n  get journeys() {\r\n\treturn this._journeys;\r\n  }\r\n\r\n  set journeys(value) {\r\n\tthis._journeys = value;\r\n  }\r\n\r\n  get bookingCost() {\r\n\treturn this._bookingCost;\r\n  }\r\n\r\n  set bookingCost(value) {\r\n\tthis._bookingCost = value;\r\n  }\r\n\r\n\r\n  get fuelPurchases() {\r\n\treturn this._fuelPurchases;\r\n  }\r\n\r\n  set fuelPurchases(newFuelPurchases) {\r\n\tthis._fuelPurchases = newFuelPurchases;\r\n  }\r\n\r\n  /**\r\n   * Adds a new fuel purchase to this booking\r\n   * @param {FuelPurchase} newFuelPurchase - new fuel purchase to be added to this.fuelPurchases\r\n   */\r\n  addFuelPurchase(newFuelPurchase) {\r\n\tthis.fuelPurchases.push(newFuelPurchase);\r\n  }\r\n\r\n  /**\r\n   * Adds a new journey to this booking and updates booking cost\r\n   * @param {Journey} newJourney - new journey to be added to this.journeys\r\n   */\r\n  addJourney(newJourney) {\r\n\tthis.journeys.push(newJourney);\r\n\tthis.bookingCost = this.calculateBookingCost();\r\n  }\r\n\r\n  /**\r\n   * Removes a journey from this.journeys and updated booking cost\r\n   * @param {Journey} journey - the journey to be removed\r\n   */\r\n  removeJourney(journey) {\r\n\tthis.journeys = this.journeys.filter(j => j.id !== journey.id);\r\n\tthis.bookingCost = this.calculateBookingCost();\r\n  }\r\n\r\n  /**\r\n   * Removes a fuel purchase from this.fuelPurchases\r\n   * @param {FuelPurchase} fuelPurchase - the fuel purchase to be removed\r\n   */\r\n  removeFuelPurchase(fuelPurchase) {\r\n\tthis.fuelPurchases = this.fuelPurchases.filter(f => f.id !== fuelPurchase.id);\r\n  }\r\n\r\n  /**\r\n   * Calculates the cost of this booking based on its type and journeys\r\n   * @returns {number} bookingCost - the cost of this booking\r\n   */\r\n  calculateBookingCost() {\r\n\tlet bookingCost = 0;\r\n\tif (this.bookingType === 'D') {\r\n\t  let days = moment(this.endDate).diff(this.startDate, 'days');\r\n\t  if (days === 0) days = 1;\r\n\t  bookingCost = days * 100;\r\n\t} else {\r\n\t  if (this.journeys.length) {\r\n\t\tbookingCost = this.journeys.reduce((dist, j) => {\r\n\t\t  dist += j.journeyEndOdometerReading - j.journeyStartOdometerReading;\r\n\t\t  return dist;\r\n\t\t}, 0);\r\n\t  }\r\n\t}\r\n\treturn bookingCost;\r\n  }\r\n}\r\n","/**\r\n * WarningModal.js\r\n */\r\nimport React from 'react';\r\nimport {Button, Modal} from \"react-bootstrap\";\r\n\r\n/**\r\n * @typedef {Object} WarningModalProps\r\n * @property {boolean} show - determines whether this modal should be rendered\r\n * @property {Function} cancelHandler - sets {@link show} to false\r\n * @property {Function} acceptHandler - fires when the user confirms conflict resolution\r\n * @property {string} header - title of this warning modal\r\n * @property {string} body - body message of this warning modal\r\n * @property {string} accept - text of the accept button\r\n * @property {string} cancel - text of the cancel button\r\n *\r\n */\r\n/**\r\n * WarningModal component - renders a warning modal that allows the user to choose an action\r\n * @param {WarningModalProps} props\r\n * @returns {*}\r\n * @constructor\r\n */\r\nexport const WarningModal = props => {\r\n  return (\r\n\t<Modal\r\n\t  show={props.show}\r\n\t  onHide={props.cancelHandler}\r\n\t  size=\"xl\"\r\n\t  aria-labelledby=\"contained-modal-title-vcenter\"\r\n\t  centered\r\n\t>\r\n\t  <Modal.Header closeButton>\r\n\t\t<Modal.Title id=\"contained-modal-title-vcenter\">\r\n\t\t  Warning\r\n\t\t</Modal.Title>\r\n\t  </Modal.Header>\r\n\t  <Modal.Body>\r\n\t\t<h4>{props.header}</h4>\r\n\t\t<p>\r\n\t\t  {props.body}\r\n\t\t</p>\r\n\t  </Modal.Body>\r\n\t  <Modal.Footer>\r\n\t\t<Button\r\n\t\tonClick={props.acceptHandler}\r\n\t\tsize=\"lg\"\r\n\t\tvariant=\"danger\"\r\n\t\t>\r\n\t\t  {props.accept}\r\n\t\t</Button>\r\n\t\t<Button\r\n\t\t  variant=\"info\"\r\n\t\t  size=\"lg\"\r\n\t\t  onClick={props.cancelHandler}>\r\n\t\t  {props.cancel}\r\n\t\t</Button>\r\n\t  </Modal.Footer>\r\n\t</Modal>\r\n  )\r\n};\r\n","/**\r\n * AddBooking.js\r\n */\r\nimport React, {useContext, useEffect, useState} from 'react';\r\nimport {useHistory, useParams} from 'react-router-dom';\r\nimport {Button, Col, Container, Form, Row} from \"react-bootstrap\";\r\nimport {AppContext} from \"../../AppContext/AppContext\";\r\nimport {Notification} from \"../Notification/Notification\";\r\nimport {LoadingSpinner} from \"../LoadingSpinner/LoadingSpinner\";\r\nimport Moment from 'moment';\r\nimport {extendMoment} from 'moment-range';\r\nimport {Booking} from \"../../Models/Booking\";\r\nimport * as yup from \"yup\";\r\nimport {WarningModal} from \"../Modals/WarningModal\";\r\nimport {Formik} from \"formik\";\r\n\r\nconst moment = extendMoment(Moment);\r\nconst cloneDeep = require('lodash.clonedeep');\r\n\r\n/**\r\n * AddBooking component\r\n * @returns {*}\r\n * @constructor\r\n */\r\nexport const AddBooking = () => {\r\n  const {loading, notification, vehicles, addResource, deleteResource} = useContext(AppContext);\r\n  const [bookingConflict, setBookingConflict] = useState({status: false, booking: null});\r\n  const [serviceConflict, setServiceConflict] = useState({status: false, service: null});\r\n  const [bookingToBeAdded, setBookingToBeAdded] = useState(null);\r\n  const [addBooking, setAddBooking] = useState(false);\r\n  const {vehicleID} = useParams();\r\n  const history = useHistory();\r\n  const vehicleToBeModified = vehicles.find(v => v.id === vehicleID);\r\n  const vehicle = cloneDeep(vehicleToBeModified);\r\n\r\n  // Defines a schema for the AddBooking form\r\n  const schema = yup.object().shape({\r\n\tbookingType: yup.string().required('This field is required'),\r\n\tstartDate: yup\r\n\t  .date()\r\n\t  .min(moment().subtract(1, 'day'), 'Start date cannot be earlier than today')\r\n\t  .max(moment(moment(), 'YYYY-MM-DD').add(1, 'year'), 'Invalid date')\r\n\t  .required('This field is required'),\r\n\tendDate: yup\r\n\t  .date()\r\n\t  .min(moment().subtract(1, 'day'), 'Invalid date')\r\n\t  .min(yup.ref('startDate'), 'End date cannot be earlier start date')\r\n\t  .max(moment(moment(), 'YYYY-MM-DD').add(1, 'year'), 'Invalid date')\r\n\t  .required('This field is required'),\r\n\tstartOdometer: yup\r\n\t  .number()\r\n\t  .min(vehicle ? vehicle.odometerReading : 0, 'Cannot be lower than current odometer reading')\r\n\t  .required('This field is required')\r\n  });\r\n\r\n  // Deletes a resource from both the context and firebase,\r\n  // then adds a new resource\r\n  const confirmDeleteConflictedResource = (conflictedResourceType, conflictedResource, newResourceType, newResource) => {\r\n\tdeleteResource.confirmDeleteResource(conflictedResourceType, conflictedResource);\r\n\tdeleteResource.setDeleteResourceModalShow(null, null, () => {\r\n\t  addResource(newResourceType, newResource);\r\n\t  history.push(`/show/${vehicle.id}`);\r\n\t});\r\n  };\r\n\r\n  // Detects changes on addBooking\r\n  // Adds a new booking if form is valid and there are no conflicts\r\n  useEffect(() => {\r\n\tif (addBooking && bookingToBeAdded) {\r\n\t  addResource('booking', bookingToBeAdded);\r\n\t  history.push(`/show/${vehicle.id}`);\r\n\t}\r\n  }, [addBooking]);\r\n\r\n  return (\r\n\t<Container>\r\n\t  {\r\n\t\tnotification && notification.display ?\r\n\t\t  (\r\n\t\t\t<Notification\r\n\t\t\t  display={notification.display}\r\n\t\t\t  message={notification.message}/>\r\n\t\t  ) : ''\r\n\t  }\r\n\t  <Row>\r\n\t\t<Col>\r\n\t\t  <h2 className=\"text-center my-5\">Add new booking\r\n\t\t\tfor: {vehicle ? `${vehicle.manufacturer} ${vehicle.model} (${vehicle.year})` : ''}</h2>\r\n\t\t</Col>\r\n\t  </Row>\r\n\t  <WarningModal\r\n\t\tonHide={() => setBookingConflict({status: false})}\r\n\t\tshow={bookingConflict.status}\r\n\t\theader=\"Booking conflict\"\r\n\t\tbody={`New booking could not be added to the system, because there is another booking scheduled between ${bookingConflict.booking ? moment(bookingConflict.booking.startDate, 'YYYY-MM-DD').format('DD/MM/YYYY') : ''} and ${bookingConflict.booking ? moment(bookingConflict.booking.endDate, 'YYYY-MM-DD').format('DD/MM/YYYY') : ''}. Would you like to cancel the other booking and add this one now?`}\r\n\t\taccept=\"Yes, cancel the other booking\"\r\n\t\tcancel=\"No, keep it as it is\"\r\n\t\tacceptHandler={() => {\r\n\t\t  confirmDeleteConflictedResource('booking', bookingConflict.booking, 'booking', bookingToBeAdded);\r\n\t\t}}\r\n\t\tcancelHandler={() => setBookingConflict({status: false})}\r\n\t  />\r\n\t  <WarningModal\r\n\t\tonHide={() => setServiceConflict({status: false})}\r\n\t\tshow={serviceConflict.status}\r\n\t\theader=\"Service conflict\"\r\n\t\tbody={`New booking could not be added to the system, because there is a service scheduled for ${serviceConflict.service ? moment(serviceConflict.service.servicedAt, 'YYYY-MM-DD').format('DD/MM/YYYY') : ''}. Would you like to cancel that service and add this booking?`}\r\n\t\taccept=\"Yes, cancel the service\"\r\n\t\tcancel=\"No, keep it as it is\"\r\n\t\tacceptHandler={() => {\r\n\t\t  confirmDeleteConflictedResource('service', serviceConflict.service, 'booking', bookingToBeAdded);\r\n\t\t}}\r\n\t\tcancelHandler={() => setServiceConflict({status: false})}\r\n\t  />\r\n\t  {\r\n\t\tloading ?\r\n\t\t  (\r\n\t\t\t<Row className=\"justify-content-center mt-5\">\r\n\t\t\t  <LoadingSpinner/>\r\n\t\t\t</Row>\r\n\t\t  )\r\n\t\t  :\r\n\t\t  (\r\n\t\t\t<Formik\r\n\t\t\t  validationSchema={schema}\r\n\t\t\t  onSubmit={(values) => {\r\n\t\t\t\tconst {bookingType, startDate, endDate, startOdometer} = values;\r\n\t\t\t\tconst booking = new Booking(vehicle.id, bookingType, startDate, endDate, startOdometer);\r\n\t\t\t\tsetBookingToBeAdded(booking);\r\n\r\n\t\t\t\t// check booking conflicts\r\n\t\t\t\tif (vehicle.bookings.some(b => {\r\n\t\t\t\t  return moment.range(moment(b.startDate, 'YYYY-MM-DD'), moment(b.endDate, 'YYYY-MM-DD')).overlaps(moment.range(moment(startDate, 'YYYY-MM-DD'), moment(endDate, 'YYYY-MM-DD')))\r\n\t\t\t\t})) {\r\n\t\t\t\t  const bookingConflict = vehicle.bookings.find(b => moment.range(moment(b.startDate, 'YYYY-MM-DD'), moment(b.endDate, 'YYYY-MM-DD')).overlaps(moment.range(moment(startDate, 'YYYY-MM-DD'), moment(endDate, 'YYYY-MM-DD'))));\r\n\t\t\t\t  setBookingConflict({\r\n\t\t\t\t\tstatus: true,\r\n\t\t\t\t\tbooking: bookingConflict\r\n\t\t\t\t  });\r\n\t\t\t\t}\r\n\t\t\t\t// check service conflicts\r\n\t\t\t\telse if (vehicle.services.some(s => moment(s.servicedAt, 'YYYY-MM-DD').within(moment.range(moment(startDate, 'YYYY-MM-DD'), moment(endDate, 'YYYY-MM-DD'))))) {\r\n\r\n\t\t\t\t  const serviceConflict = vehicle.services.find(s => moment(s.servicedAt, 'YYYY-MM-DD').within(moment.range(moment(startDate, 'YYYY-MM-DD'), moment(endDate, 'YYYY-MM-DD'))));\r\n\t\t\t\t  setServiceConflict({\r\n\t\t\t\t\tstatus: true,\r\n\t\t\t\t\tservice: serviceConflict\r\n\t\t\t\t  });\r\n\t\t\t\t} else {\r\n\t\t\t\t  // All good, add new booking\r\n\t\t\t\t  setAddBooking(true);\r\n\t\t\t\t}\r\n\t\t\t  }}\r\n\t\t\t  initialValues={{\r\n\t\t\t\tbookingType: 'D',\r\n\t\t\t\tstartDate: moment(moment(), 'YYYY-MM-DD').format('YYYY-MM-DD'),\r\n\t\t\t\tendDate: moment(moment(), 'YYYY-MM-DD').add(1, 'day').format('YYYY-MM-DD'),\r\n\t\t\t\tstartOdometer: vehicle ? vehicle.odometerReading : 0\r\n\t\t\t  }}\r\n\t\t\t>\r\n\t\t\t  {({\r\n\t\t\t\t  handleSubmit,\r\n\t\t\t\t  handleChange,\r\n\t\t\t\t  resetForm,\r\n\t\t\t\t  values,\r\n\t\t\t\t  touched,\r\n\t\t\t\t  errors,\r\n\t\t\t\t  isSubmitting\r\n\t\t\t\t}) => (\r\n\t\t\t\t<Form\r\n\t\t\t\t  onSubmit={handleSubmit}\r\n\t\t\t\t>\r\n\t\t\t\t  <Form.Group as={Row} controlId=\"bookingType\">\r\n\t\t\t\t\t<Form.Label column=\"true\" sm=\"2\">Booking Type:<span\r\n\t\t\t\t\t  className=\"text-danger\">*</span></Form.Label>\r\n\t\t\t\t\t<Col sm=\"10\">\r\n\t\t\t\t\t  <Form.Control\r\n\t\t\t\t\t\tas=\"select\"\r\n\t\t\t\t\t\tname=\"bookingType\"\r\n\t\t\t\t\t\tvalue={values.bookingType}\r\n\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\tisValid={touched.bookingType && !errors.bookingType}\r\n\t\t\t\t\t\tisInvalid={!!errors.bookingType}\r\n\t\t\t\t\t  >\r\n\t\t\t\t\t\t<option\r\n\t\t\t\t\t\t  value=\"D\">\r\n\t\t\t\t\t\t  Per day\r\n\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t<option\r\n\t\t\t\t\t\t  value=\"K\">\r\n\t\t\t\t\t\t  Per kilometer\r\n\t\t\t\t\t\t</option>\r\n\t\t\t\t\t  </Form.Control>\r\n\t\t\t\t\t  <Form.Control.Feedback type=\"invalid\">\r\n\t\t\t\t\t\t{errors.bookingType}\r\n\t\t\t\t\t  </Form.Control.Feedback>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t  </Form.Group>\r\n\t\t\t\t  <Form.Group as={Row} controlId=\"startDate\">\r\n\t\t\t\t\t<Form.Label column=\"true\" sm=\"2\">Start Date:<span\r\n\t\t\t\t\t  className=\"text-danger\">*</span></Form.Label>\r\n\t\t\t\t\t<Col sm=\"10\">\r\n\t\t\t\t\t  <Form.Control\r\n\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\tname=\"startDate\"\r\n\t\t\t\t\t\tvalue={values.startDate}\r\n\t\t\t\t\t\ttype=\"date\"\r\n\t\t\t\t\t\tisInvalid={!!errors.startDate}\r\n\t\t\t\t\t\tisValid={touched.startDate && !errors.startDate}\r\n\t\t\t\t\t  />\r\n\t\t\t\t\t  <Form.Control.Feedback type=\"invalid\">\r\n\t\t\t\t\t\t{errors.startDate}\r\n\t\t\t\t\t  </Form.Control.Feedback>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t  </Form.Group>\r\n\t\t\t\t  <Form.Group as={Row} controlId=\"endDate\">\r\n\t\t\t\t\t<Form.Label column=\"true\" sm=\"2\">End Date:<span\r\n\t\t\t\t\t  className=\"text-danger\">*</span></Form.Label>\r\n\t\t\t\t\t<Col sm=\"10\">\r\n\t\t\t\t\t  <Form.Control\r\n\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\tname=\"endDate\"\r\n\t\t\t\t\t\tvalue={values.endDate}\r\n\t\t\t\t\t\ttype=\"date\"\r\n\t\t\t\t\t\tisInvalid={!!errors.endDate}\r\n\t\t\t\t\t\tisValid={touched.endDate && !errors.endDate}\r\n\t\t\t\t\t  />\r\n\t\t\t\t\t  <Form.Control.Feedback type=\"invalid\">\r\n\t\t\t\t\t\t{errors.endDate}\r\n\t\t\t\t\t  </Form.Control.Feedback>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t  </Form.Group>\r\n\t\t\t\t  <Form.Group as={Row} controlId=\"startOdometer\">\r\n\t\t\t\t\t<Form.Label column=\"true\" sm=\"2\">Start Odometer:<span\r\n\t\t\t\t\t  className=\"text-danger\">*</span></Form.Label>\r\n\t\t\t\t\t<Col sm=\"10\">\r\n\t\t\t\t\t  <Form.Control\r\n\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\tname=\"startOdometer\"\r\n\t\t\t\t\t\tvalue={values.startOdometer}\r\n\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\tplaceholder=\"Start odometer...\"\r\n\t\t\t\t\t\tisValid={touched.startOdometer && !errors.startOdometer}\r\n\t\t\t\t\t\tisInvalid={!!errors.startOdometer}\r\n\t\t\t\t\t  />\r\n\t\t\t\t\t  <Form.Control.Feedback type=\"invalid\">\r\n\t\t\t\t\t\t{errors.startOdometer}\r\n\t\t\t\t\t  </Form.Control.Feedback>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t  </Form.Group>\r\n\t\t\t\t  <Row className=\"justify-content-center my-5\">\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t  variant=\"primary\"\r\n\t\t\t\t\t  size=\"lg\"\r\n\t\t\t\t\t  type=\"submit\"\r\n\t\t\t\t\t  className=\"mr-5\"\r\n\t\t\t\t\t  disabled={isSubmitting}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t  Add booking\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t  variant=\"warning\"\r\n\t\t\t\t\t  size=\"lg\"\r\n\t\t\t\t\t  className=\"mr-5\"\r\n\t\t\t\t\t  onClick={resetForm}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t  Clear\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t  variant=\"danger\"\r\n\t\t\t\t\t  size=\"lg\"\r\n\t\t\t\t\t  onClick={() => history.push(`/show/${vehicleID}`)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t  Cancel\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t  </Row>\r\n\t\t\t\t</Form>\r\n\t\t\t  )}\r\n\t\t\t</Formik>\r\n\t\t  )\r\n\t  }\r\n\t</Container>\r\n  )\r\n};\r\n","/**\r\n * AddService.js\r\n */\r\nimport React, {useContext, useEffect, useState} from 'react';\r\nimport {useHistory, useParams} from 'react-router-dom';\r\nimport {AppContext} from \"../../AppContext/AppContext\";\r\nimport {Button, Col, Container, Form, Row} from \"react-bootstrap\";\r\nimport {Notification} from \"../Notification/Notification\";\r\nimport {LoadingSpinner} from \"../LoadingSpinner/LoadingSpinner\";\r\nimport {Service} from \"../../Models/Service\";\r\nimport {Formik} from \"formik\";\r\nimport Moment from \"moment\";\r\nimport {extendMoment} from 'moment-range';\r\nimport * as yup from \"yup\";\r\nimport {WarningModal} from \"../Modals/WarningModal\";\r\n\r\nconst cloneDeep = require('lodash.clonedeep');\r\nconst moment = extendMoment(Moment);\r\n\r\n/**\r\n * AddService component\r\n * @returns {*}\r\n * @constructor\r\n */\r\nexport const AddService = () => {\r\n  const {loading, notification, vehicles, addResource, deleteResource} = useContext(AppContext);\r\n  const [bookingConflict, setBookingConflict] = useState({status: false, booking: null});\r\n  const [serviceConflict, setServiceConflict] = useState({status: false, service: null});\r\n  const [serviceToBeAdded, setServiceToBeAdded] = useState(null);\r\n  const [addService, setAddService] = useState(false);\r\n  const {vehicleID} = useParams();\r\n  const history = useHistory();\r\n  const vehicleToBeModified = vehicles.find(v => v.id === vehicleID);\r\n  const vehicle = cloneDeep(vehicleToBeModified);\r\n\r\n  // Deletes a resource from both the context and firebase,\r\n  // then adds a new resource\r\n  const confirmDeleteConflictedResource = (conflictedResourceType, conflictedResource, newResourceType, newResource) => {\r\n\tdeleteResource.confirmDeleteResource(conflictedResourceType, conflictedResource);\r\n\tdeleteResource.setDeleteResourceModalShow(null, null, () => {\r\n\t  addResource(newResourceType, newResource);\r\n\t  history.push(`/show/${vehicle.id}`);\r\n\t});\r\n  };\r\n\r\n  // Defines a schema for the form to add a service\r\n  const schema = yup.object().shape({\r\n\tservicedAt: yup\r\n\t  .date()\r\n\t  .min(moment().subtract(1, 'day'), 'Invalid date')\r\n\t  .required('This field is required'),\r\n\tserviceOdometer: yup\r\n\t  .number()\r\n\t  .min(vehicle ? vehicle.odometerReading : 0,\r\n\t\t'Invalid service odometer')\r\n\t  .required('This field is required')\r\n  });\r\n\r\n  // Detects changes on addService\r\n  // Adds a service if form is valid and there are no conflicts\r\n  useEffect(() => {\r\n\tif (addService && serviceToBeAdded) {\r\n\t  addResource('service', serviceToBeAdded);\r\n\t  history.push(`/show/${vehicle.id}`);\r\n\t}\r\n  }, [addService]);\r\n\r\n  return (\r\n\t<Container>\r\n\t  {\r\n\t\tnotification && notification.display ?\r\n\t\t  (\r\n\t\t\t<Notification\r\n\t\t\t  display={notification.display}\r\n\t\t\t  message={notification.message}/>\r\n\t\t  ) : ''\r\n\t  }\r\n\t  <Row>\r\n\t\t<Col>\r\n\t\t  <h2 className=\"text-center my-5\">Register new service\r\n\t\t\tfor: {vehicle ? `${vehicle.manufacturer} ${vehicle.model} (${vehicle.year})` : ''}</h2>\r\n\t\t</Col>\r\n\t  </Row>\r\n\t  <WarningModal\r\n\t\tonHide={() => setBookingConflict({status: false})}\r\n\t\tshow={bookingConflict.status}\r\n\t\theader=\"Booking conflict\"\r\n\t\tbody={`New service could not be added to the system, because there is a booking scheduled between ${bookingConflict.booking ? moment(bookingConflict.booking.startDate, 'YYYY-MM-DD').format('DD/MM/YYYY') : ''} and ${bookingConflict.booking ? moment(bookingConflict.booking.endDate, 'YYYY-MM-DD').format('DD/MM/YYYY') : ''}. Would you like to cancel the booking and add this service now?`}\r\n\t\taccept=\"Yes, cancel this booking\"\r\n\t\tcancel=\"No, keep it as it is\"\r\n\t\tacceptHandler={() => {\r\n\t\t  confirmDeleteConflictedResource('booking', bookingConflict.booking, 'service', serviceToBeAdded);\r\n\t\t}}\r\n\t\tcancelHandler={() => setBookingConflict({status: false})}\r\n\t  />\r\n\t  <WarningModal\r\n\t\tonHide={() => setServiceConflict({status: false})}\r\n\t\tshow={serviceConflict.status}\r\n\t\theader=\"Service conflict\"\r\n\t\tbody={`New service could not be added to the system, because there is another service also scheduled for ${serviceConflict.service ? moment(serviceConflict.service.servicedAt, 'YYYY-MM-DD').format('DD/MM/YYYY') : ''}. Would you like to cancel that service and add this one instead?`}\r\n\t\taccept=\"Yes, cancel the other service\"\r\n\t\tcancel=\"No, keep it as it is\"\r\n\t\tacceptHandler={() => {\r\n\t\t  confirmDeleteConflictedResource('service', serviceConflict.service, 'service', serviceToBeAdded);\r\n\t\t}}\r\n\t\tcancelHandler={() => setServiceConflict({status: false})}\r\n\t  />\r\n\t  {\r\n\t\tloading ?\r\n\t\t  (\r\n\t\t\t<Row className=\"justify-content-center mt-5\">\r\n\t\t\t  <LoadingSpinner/>\r\n\t\t\t</Row>\r\n\t\t  )\r\n\t\t  :\r\n\t\t  (\r\n\t\t\t<Formik\r\n\t\t\t  validationSchema={schema}\r\n\t\t\t  onSubmit={(values) => {\r\n\t\t\t\tconst {serviceOdometer, servicedAt} = values;\r\n\t\t\t\tconst service = new Service(vehicle.id, serviceOdometer, servicedAt);\r\n\t\t\t\tsetServiceToBeAdded(service);\r\n\r\n\t\t\t\t// check booking conflicts\r\n\t\t\t\tif (vehicle.bookings.some(b => moment(servicedAt, 'YYYY-MM-DD').within(moment.range(b.startDate, b.endDate)))) {\r\n\t\t\t\t  const bookingConflict = vehicle.bookings.find(b => moment(servicedAt, 'YYYY-MM-DD').within(moment.range(b.startDate, b.endDate)));\r\n\t\t\t\t  setBookingConflict({\r\n\t\t\t\t\tstatus: true,\r\n\t\t\t\t\tbooking: bookingConflict\r\n\t\t\t\t  });\r\n\t\t\t\t}\r\n\t\t\t\t// check service conflicts\r\n\t\t\t\telse if (vehicle.services.some(s => moment(s.servicedAt, 'YYYY-MM-DD').isSame(moment(servicedAt, 'YYYY-MM-DD')))) {\r\n\t\t\t\t  const serviceConflict = vehicle.services.find(s => moment(s.servicedAt, 'YYYY-MM-DD').isSame(moment(servicedAt, 'YYYY-MM-DD')));\r\n\t\t\t\t  setServiceConflict({\r\n\t\t\t\t\tstatus: true,\r\n\t\t\t\t\tservice: serviceConflict\r\n\t\t\t\t  });\r\n\t\t\t\t} else {\r\n\t\t\t\t  setAddService(true);\r\n\t\t\t\t}\r\n\t\t\t  }}\r\n\t\t\t  initialValues={{\r\n\t\t\t\tservicedAt: moment(moment(), 'YYYY-MM-DD').format('YYYY-MM-DD'),\r\n\t\t\t\tserviceOdometer: vehicle ? vehicle.odometerReading : 0\r\n\t\t\t  }}\r\n\t\t\t>\r\n\t\t\t  {({\r\n\t\t\t\t  handleSubmit,\r\n\t\t\t\t  handleChange,\r\n\t\t\t\t  resetForm,\r\n\t\t\t\t  values,\r\n\t\t\t\t  touched,\r\n\t\t\t\t  errors,\r\n\t\t\t\t  isSubmitting\r\n\t\t\t\t}) => (\r\n\t\t\t\t<Form noValidate onSubmit={handleSubmit}>\r\n\t\t\t\t  <Form.Group as={Row} controlId=\"servicedAt\">\r\n\t\t\t\t\t<Form.Label column=\"true\" sm=\"2\">Serviced at:<span\r\n\t\t\t\t\t  className=\"text-danger\">*</span></Form.Label>\r\n\t\t\t\t\t<Col sm=\"10\">\r\n\t\t\t\t\t  <Form.Control\r\n\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\tname=\"servicedAt\"\r\n\t\t\t\t\t\tvalue={values.servicedAt}\r\n\t\t\t\t\t\ttype=\"date\"\r\n\t\t\t\t\t\tisInvalid={!!errors.servicedAt}\r\n\t\t\t\t\t\tisValid={touched.servicedAt && !errors.servicedAt}\r\n\t\t\t\t\t  />\r\n\t\t\t\t\t  <Form.Control.Feedback type=\"invalid\">\r\n\t\t\t\t\t\t{errors.servicedAt}\r\n\t\t\t\t\t  </Form.Control.Feedback>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t  </Form.Group>\r\n\r\n\t\t\t\t  <Form.Group as={Row} controlId=\"serviceOdometer\">\r\n\t\t\t\t\t<Form.Label column=\"true\" sm=\"2\">Service odometer:<span\r\n\t\t\t\t\t  className=\"text-danger\">*</span></Form.Label>\r\n\t\t\t\t\t<Col sm=\"10\">\r\n\t\t\t\t\t  <Form.Control\r\n\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\tname=\"serviceOdometer\"\r\n\t\t\t\t\t\tvalue={values.serviceOdometer}\r\n\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\tplaceholder=\"Service odometer...\"\r\n\t\t\t\t\t\tisValid={touched.serviceOdometer && !errors.serviceOdometer}\r\n\t\t\t\t\t\tisInvalid={!!errors.serviceOdometer}\r\n\t\t\t\t\t  />\r\n\t\t\t\t\t  <Form.Control.Feedback type=\"invalid\">\r\n\t\t\t\t\t\t{errors.serviceOdometer}\r\n\t\t\t\t\t  </Form.Control.Feedback>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t  </Form.Group>\r\n\r\n\t\t\t\t  <Row className=\"justify-content-center\">\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t  variant=\"primary\"\r\n\t\t\t\t\t  size=\"lg\"\r\n\t\t\t\t\t  type=\"submit\"\r\n\t\t\t\t\t  className=\"mr-5\"\r\n\t\t\t\t\t  disabled={isSubmitting}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t  Add service\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t  variant=\"warning\"\r\n\t\t\t\t\t  size=\"lg\"\r\n\t\t\t\t\t  className=\"mr-5\"\r\n\t\t\t\t\t  onClick={() => {\r\n\t\t\t\t\t\tresetForm();\r\n\t\t\t\t\t  }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t  Clear\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t  variant=\"danger\"\r\n\t\t\t\t\t  size=\"lg\"\r\n\t\t\t\t\t  onClick={() => history.push(`/show/${vehicleID}`)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t  Cancel\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t  </Row>\r\n\t\t\t\t</Form>\r\n\t\t\t  )}\r\n\t\t\t</Formik>\r\n\t\t  )\r\n\t  }\r\n\t</Container>\r\n  )\r\n};\r\n","/**\r\n * AddJourney.js\r\n */\r\nimport React from 'react';\r\nimport {AppConsumer, AppContext} from \"../../AppContext/AppContext\";\r\nimport {Accordion, Button, Card, Col, Container, ListGroup, Row} from \"react-bootstrap\";\r\nimport {Notification} from \"../Notification/Notification\";\r\nimport {LoadingSpinner} from \"../LoadingSpinner/LoadingSpinner\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faPlus} from \"@fortawesome/free-solid-svg-icons/faPlus\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\n/**\r\n * AddJourney component - navigates to AddJourneyForm once a booking is selected\r\n */\r\nexport class AddJourney extends React.Component {\r\n  constructor(props) {\r\n\tsuper(props);\r\n\tthis.initialState = {\r\n\t  vehicle: '',\r\n\t  fields: {\r\n\t\tid: '',\r\n\t\tbookingID: '',\r\n\t\tjourneyStartedAt: '',\r\n\t\tjourneyEndedAt: '',\r\n\t\tjourneyStartOdometerReading: '',\r\n\t\tjourneyEndOdometerReading: '',\r\n\t\tjourneyFrom: '',\r\n\t\tjourneyTo: '',\r\n\t\tcreatedAt: '',\r\n\t\tupdatedAt: null\r\n\t  }\r\n\t};\r\n\tthis.state = {...this.initialState};\r\n  }\r\n\r\n  componentDidMount() {\r\n\tconst {vehicleID} = this.props.match.params;\r\n\tconst {vehicles} = this.context;\r\n\r\n\tconst vehicle = vehicles.find(vehicle => vehicle.id === vehicleID);\r\n\tthis.setState({\r\n\t  ...this.initialState,\r\n\t  vehicle\r\n\t});\r\n  }\r\n\r\n  render() {\r\n\treturn (\r\n\t  <AppConsumer>\r\n\t\t{\r\n\t\t  ({loading, notification}) => (\r\n\t\t\t<Container>\r\n\t\t\t  {\r\n\t\t\t\tnotification.display ?\r\n\t\t\t\t  (\r\n\t\t\t\t\t<Notification\r\n\t\t\t\t\t  display={notification.display}\r\n\t\t\t\t\t  message={notification.message}/>\r\n\t\t\t\t  ) : ''\r\n\t\t\t  }\r\n\t\t\t  <Row>\r\n\t\t\t\t<Col>\r\n\t\t\t\t  <h2 className=\"text-center my-5\">\r\n\t\t\t\t\tSelect a booking to add a new journey for {this.state.vehicle ?\r\n\t\t\t\t\t`${this.state.vehicle.manufacturer} ${this.state.vehicle.model} (${this.state.vehicle.year})`\r\n\t\t\t\t\t: ''}\r\n\t\t\t\t  </h2>\r\n\t\t\t\t</Col>\r\n\t\t\t  </Row>\r\n\t\t\t  {\r\n\t\t\t\tloading ?\r\n\t\t\t\t  (\r\n\t\t\t\t\t<Row className=\"justify-content-center mt-5\">\r\n\t\t\t\t\t  <LoadingSpinner/>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t  ) :\r\n\t\t\t\t  (\r\n\t\t\t\t\t<Accordion>\r\n\t\t\t\t\t  {\r\n\t\t\t\t\t\tthis.state.vehicle ?\r\n\t\t\t\t\t\t  (\r\n\t\t\t\t\t\t\tthis.state.vehicle\r\n\t\t\t\t\t\t\t  .bookings\r\n\t\t\t\t\t\t\t  .filter(booking => booking.vehicleID === this.state.vehicle.id)\r\n\t\t\t\t\t\t\t  .sort((booking1, booking2) => {\r\n\t\t\t\t\t\t\t\tconst booking1StartDate = new Date(booking1.startDate);\r\n\t\t\t\t\t\t\t\tconst booking2StartDate = new Date(booking2.startDate);\r\n\r\n\t\t\t\t\t\t\t\tif (booking1StartDate > booking2StartDate) {\r\n\t\t\t\t\t\t\t\t  return -1;\r\n\t\t\t\t\t\t\t\t} else if (booking1StartDate < booking2StartDate) {\r\n\t\t\t\t\t\t\t\t  return 1;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\treturn 0;\r\n\t\t\t\t\t\t\t  })\r\n\t\t\t\t\t\t\t  .map((booking, index) => (\r\n\t\t\t\t\t\t\t\t<Card key={index} style={{overflow: 'visible'}}>\r\n\t\t\t\t\t\t\t\t  <Card.Header>\r\n\t\t\t\t\t\t\t\t\t<Accordion.Toggle\r\n\t\t\t\t\t\t\t\t\t  className=\"mr-auto\"\r\n\t\t\t\t\t\t\t\t\t  as={Button}\r\n\t\t\t\t\t\t\t\t\t  variant=\"link\"\r\n\t\t\t\t\t\t\t\t\t  eventKey={index}>\r\n\t\t\t\t\t\t\t\t\t  {`${new Date(booking.startDate).toLocaleDateString('en-AU')}`}\r\n\t\t\t\t\t\t\t\t\t</Accordion.Toggle>\r\n\t\t\t\t\t\t\t\t\t<Link to={`/addJourneyForm/${booking.id}`}>\r\n\t\t\t\t\t\t\t\t\t  <Button variant=\"outline-success\">\r\n\t\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faPlus}/>\r\n\t\t\t\t\t\t\t\t\t  </Button>\r\n\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t  </Card.Header>\r\n\t\t\t\t\t\t\t\t  <Accordion.Collapse eventKey={index}>\r\n\t\t\t\t\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t\t\t\t  <ListGroup>\r\n\t\t\t\t\t\t\t\t\t\t<ListGroup.Item>\r\n\t\t\t\t\t\t\t\t\t\t  Start\r\n\t\t\t\t\t\t\t\t\t\t  Date: {`${new Date(booking.startDate).toLocaleDateString('en-AU')}`}\r\n\t\t\t\t\t\t\t\t\t\t</ListGroup.Item>\r\n\t\t\t\t\t\t\t\t\t\t<ListGroup.Item>\r\n\t\t\t\t\t\t\t\t\t\t  End\r\n\t\t\t\t\t\t\t\t\t\t  Date: {`${new Date(booking.endDate).toLocaleDateString('en-AU')}`}\r\n\t\t\t\t\t\t\t\t\t\t</ListGroup.Item>\r\n\t\t\t\t\t\t\t\t\t\t<ListGroup.Item>\r\n\t\t\t\t\t\t\t\t\t\t  Start Odometer: {booking.startOdometer} km\r\n\t\t\t\t\t\t\t\t\t\t</ListGroup.Item>\r\n\t\t\t\t\t\t\t\t\t\t<ListGroup.Item>\r\n\t\t\t\t\t\t\t\t\t\t  Booking\r\n\t\t\t\t\t\t\t\t\t\t  Type: {booking.bookingType === 'D' ? 'Per day' : 'Per km'}\r\n\t\t\t\t\t\t\t\t\t\t</ListGroup.Item>\r\n\t\t\t\t\t\t\t\t\t  </ListGroup>\r\n\t\t\t\t\t\t\t\t\t</Card.Body>\r\n\t\t\t\t\t\t\t\t  </Accordion.Collapse>\r\n\t\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t\t  ))\r\n\t\t\t\t\t\t  )\r\n\t\t\t\t\t\t  : ''\r\n\t\t\t\t\t  }\r\n\t\t\t\t\t</Accordion>\r\n\t\t\t\t  )\r\n\t\t\t  }\r\n\t\t\t  <Button\r\n\t\t\t\tclassName=\"my-5\"\r\n\t\t\t\tstyle={{\r\n\t\t\t\t  position: 'relative',\r\n\t\t\t\t  left: '50%',\r\n\t\t\t\t  transform: 'translateX(-50%)'\r\n\t\t\t\t}}\r\n\t\t\t\tvariant=\"danger\"\r\n\t\t\t\tsize=\"lg\"\r\n\t\t\t\tonClick={() => this.props.history.push(`/show/${this.state.vehicle.id}`)}\r\n\t\t\t  >\r\n\t\t\t\tCancel\r\n\t\t\t  </Button>\r\n\t\t\t</Container>\r\n\t\t  )\r\n\t\t}\r\n\t  </AppConsumer>\r\n\t)\r\n  }\r\n}\r\n\r\nAddJourney.contextType = AppContext;\r\n","/**\r\n * Journey.js\r\n */\r\nimport moment from \"moment\";\r\n\r\n/**\r\n * Journey model class\r\n * @class\r\n */\r\nexport class Journey {\r\n  _id;\r\n  _bookingID;\r\n  _journeyStartOdometerReading;\r\n  _journeyEndOdometerReading;\r\n  _journeyStartedAt;\r\n  _journeyEndedAt;\r\n  _journeyFrom;\r\n  _journeyTo;\r\n  _createdAt;\r\n  _updatedAt;\r\n\r\n  /**\r\n   * Creates a new Journey\r\n   * @param {string} bookingID - ID of the booking associated with this journey\r\n   * @param {number} journeyStartOdometerReading - odometer reading at the start of this journey\r\n   * @param {number} journeyEndOdometerReading - odometer reading at the end of this journey\r\n   * @param {Date} journeyStartedAt - start date of this journey\r\n   * @param {Date} journeyEndedAt - end date of this journey\r\n   * @param {string} journeyFrom - location where the journey started\r\n   * @param {string} journeyTo - location where the journey ended\r\n   * @param {string} id - ID of this journey\r\n   * @param {string} createdAt - timestamp generated when this journey is created\r\n   * @param {string|null} updatedAt - timestamp generated when this journey is updated\r\n   */\r\n  constructor(bookingID, journeyStartOdometerReading, journeyEndOdometerReading, journeyStartedAt, journeyEndedAt, journeyFrom, journeyTo, id = require('uuid/v4')(), createdAt = moment().format('DD/MM/YYYY hh:mm:ss A'), updatedAt = null) {\r\n\tthis._id = id;\r\n\tthis._bookingID = bookingID;\r\n\tthis._journeyStartOdometerReading = journeyStartOdometerReading;\r\n\tthis._journeyEndOdometerReading = journeyEndOdometerReading;\r\n\tthis._journeyStartedAt = journeyStartedAt;\r\n\tthis._journeyEndedAt = journeyEndedAt;\r\n\tthis._journeyFrom = journeyFrom;\r\n\tthis._journeyTo = journeyTo;\r\n\tthis._createdAt = createdAt;\r\n\tthis._updatedAt = updatedAt;\r\n  }\r\n\r\n  get id() {\r\n\treturn this._id;\r\n  }\r\n\r\n  set id(value) {\r\n\tthis._id = value;\r\n  }\r\n\r\n  get bookingID() {\r\n\treturn this._bookingID;\r\n  }\r\n\r\n  set bookingID(value) {\r\n\tthis._bookingID = value;\r\n  }\r\n\r\n  get journeyStartOdometerReading() {\r\n\treturn this._journeyStartOdometerReading;\r\n  }\r\n\r\n  set journeyStartOdometerReading(value) {\r\n\tthis._journeyStartOdometerReading = value;\r\n  }\r\n\r\n  get journeyEndOdometerReading() {\r\n\treturn this._journeyEndOdometerReading;\r\n  }\r\n\r\n  set journeyEndOdometerReading(value) {\r\n\tthis._journeyEndOdometerReading = value;\r\n  }\r\n\r\n  get journeyStartedAt() {\r\n\treturn this._journeyStartedAt;\r\n  }\r\n\r\n  set journeyStartedAt(value) {\r\n\tthis._journeyStartedAt = value;\r\n  }\r\n\r\n  get journeyEndedAt() {\r\n\treturn this._journeyEndedAt;\r\n  }\r\n\r\n  set journeyEndedAt(value) {\r\n\tthis._journeyEndedAt = value;\r\n  }\r\n\r\n  get journeyFrom() {\r\n\treturn this._journeyFrom;\r\n  }\r\n\r\n  set journeyFrom(value) {\r\n\tthis._journeyFrom = value;\r\n  }\r\n\r\n  get journeyTo() {\r\n\treturn this._journeyTo;\r\n  }\r\n\r\n  set journeyTo(value) {\r\n\tthis._journeyTo = value;\r\n  }\r\n\r\n  get createdAt() {\r\n\treturn this._createdAt;\r\n  }\r\n\r\n  set createdAt(value) {\r\n\tthis._createdAt = value;\r\n  }\r\n\r\n  get updatedAt() {\r\n\treturn this._updatedAt;\r\n  }\r\n\r\n  set updatedAt(value) {\r\n\tthis._updatedAt = value;\r\n  }\r\n}\r\n","/**\r\n * AddJourneyForm component\r\n */\r\nimport React, {useContext, useEffect, useState} from 'react';\r\nimport {AppContext} from \"../../AppContext/AppContext\";\r\nimport {useHistory, useParams} from 'react-router-dom';\r\nimport {Notification} from \"../Notification/Notification\";\r\nimport {Button, Col, Container, Form, Row} from \"react-bootstrap\";\r\nimport {LoadingSpinner} from \"../LoadingSpinner/LoadingSpinner\";\r\nimport {Journey} from \"../../Models/Journey\";\r\nimport {extendMoment} from \"moment-range\";\r\nimport Moment from \"moment\";\r\nimport * as yup from \"yup\";\r\nimport {Formik} from \"formik\";\r\n\r\nconst moment = extendMoment(Moment);\r\nconst cloneDeep = require('lodash.clonedeep');\r\n\r\n/**\r\n * AddJourneyForm component\r\n * @returns {*}\r\n * @constructor\r\n */\r\nexport const AddJourneyForm = () => {\r\n  const {loading, notification, vehicles, addResource} = useContext(AppContext);\r\n  const [journeyToBeAdded, setJourneyToBeAdded] = useState(null);\r\n  const [addJourney, setAddJourney] = useState(false);\r\n  const {bookingID} = useParams();\r\n  const history = useHistory();\r\n  const vehicleToBeModified = vehicles.find(v => v.bookings.some(b => b.id === bookingID));\r\n  const vehicle = cloneDeep(vehicleToBeModified);\r\n  const booking = vehicle ? vehicle.bookings.find(b => b.id === bookingID) : null;\r\n  const associatedBooking = cloneDeep(booking);\r\n\r\n  // Defines a schema for the form to add a new journey\r\n  const schema = yup.object().shape({\r\n\tjourneyStartOdometerReading: yup\r\n\t  .number()\r\n\t  .min(associatedBooking ? associatedBooking.startOdometer : 0, 'Invalid odometer reading')\r\n\t  .required('This field is required'),\r\n\tjourneyEndOdometerReading: yup\r\n\t  .number()\r\n\t  .min(associatedBooking ? associatedBooking.startOdometer : 0, 'Invalid odometer reading')\r\n\t  .min(\r\n\t\tyup.ref('journeyStartOdometerReading'),\r\n\t\t'Cannot be lower than journey start odometer reading'\r\n\t  )\r\n\t  .required('This field is required'),\r\n\tjourneyStartedAt: yup\r\n\t  .date()\r\n\t  .min(associatedBooking ? moment(associatedBooking.startDate, 'YYYY-MM-DD') : moment(moment(), 'YYYY-MM-DD').format('YYYY-MM-DD'), 'Cannot be earlier than booking start date')\r\n\t  .required('This field is required'),\r\n\tjourneyEndedAt: yup\r\n\t  .date()\r\n\t  .min(associatedBooking ? moment(associatedBooking.startDate, 'YYYY-MM-DD') : moment(moment(), 'YYYY-MM-DD').format('YYYY-MM-DD'), 'Cannot be earlier than booking start date')\r\n\t  .min(yup.ref('journeyStartedAt'), 'Cannot be earlier than journey start date')\r\n\t  .max(associatedBooking ? moment(associatedBooking.endDate, 'YYYY-MM-DD') : moment(moment(), 'YYYY-MM-DD').format('YYYY-MM-DD'), 'Cannot be later than booking end date')\r\n\t  .required('This field is required'),\r\n\tjourneyFrom: yup\r\n\t  .string(),\r\n\tjourneyTo: yup\r\n\t  .string()\r\n  });\r\n\r\n  // Detects changes on addJourney\r\n  // Adds a new journey if form is valid\r\n  useEffect(() => {\r\n\tif (addJourney && journeyToBeAdded) {\r\n\t  addResource('journey', journeyToBeAdded);\r\n\t  history.push(`/show/${vehicle.id}`);\r\n\t}\r\n  }, [addJourney]);\r\n\r\n  return (\r\n\t<Container>\r\n\t  {\r\n\t\tnotification && notification.display ?\r\n\t\t  (\r\n\t\t\t<Notification\r\n\t\t\t  display={notification.display}\r\n\t\t\t  message={notification.message}/>\r\n\t\t  ) : ''\r\n\t  }\r\n\t  <Row>\r\n\t\t<Col>\r\n\t\t  <h2 className=\"text-center my-5\">Add new journey\r\n\t\t\tfor {vehicle ? `${vehicle.manufacturer} ${vehicle.model} (${vehicle.year})` : ''},\r\n\t\t\tbooked\r\n\t\t\tfor: {associatedBooking ? `${moment(associatedBooking.startDate, 'YYYY-MM-DD').format('DD/MM/YYYY')}` : ''} - {associatedBooking ? `${moment(associatedBooking.endDate, 'YYYY-MM-DD').format('DD/MM/YYYY')}` : ''}</h2>\r\n\t\t</Col>\r\n\t  </Row>\r\n\t  {\r\n\t\tloading ?\r\n\t\t  (\r\n\t\t\t<Row className=\"justify-content-center mt-5\">\r\n\t\t\t  <LoadingSpinner/>\r\n\t\t\t</Row>\r\n\t\t  )\r\n\t\t  :\r\n\t\t  (\r\n\t\t\t<Formik\r\n\t\t\t  validationSchema={schema}\r\n\t\t\t  onSubmit={(values) => {\r\n\t\t\t\tconst {journeyStartOdometerReading, journeyEndOdometerReading, journeyStartedAt, journeyEndedAt, journeyFrom, journeyTo} = values;\r\n\t\t\t\tconst journey = new Journey(bookingID, journeyStartOdometerReading, journeyEndOdometerReading, journeyStartedAt, journeyEndedAt, journeyFrom, journeyTo);\r\n\t\t\t\tsetJourneyToBeAdded(journey);\r\n\t\t\t\tsetAddJourney(true);\r\n\t\t\t  }}\r\n\t\t\t  initialValues={{\r\n\t\t\t\tjourneyStartOdometerReading: associatedBooking ? associatedBooking.startOdometer : 0,\r\n\t\t\t\tjourneyEndOdometerReading: associatedBooking ? associatedBooking.startOdometer : 0,\r\n\t\t\t\tjourneyStartedAt: associatedBooking ? associatedBooking.startDate : moment(moment(), 'YYYY-MM-DD').format('YYYY-MM-DD'),\r\n\t\t\t\tjourneyEndedAt: associatedBooking ? associatedBooking.startDate : moment(moment(), 'YYYY-MM-DD').format('YYYY-MM-DD'),\r\n\t\t\t\tjourneyFrom: '',\r\n\t\t\t\tjourneyTo: ''\r\n\t\t\t  }}\r\n\t\t\t>\r\n\t\t\t  {({\r\n\t\t\t\t  handleSubmit,\r\n\t\t\t\t  handleChange,\r\n\t\t\t\t  resetForm,\r\n\t\t\t\t  values,\r\n\t\t\t\t  touched,\r\n\t\t\t\t  errors,\r\n\t\t\t\t  isSubmitting\r\n\t\t\t\t}) => (\r\n\t\t\t\t<Form\r\n\t\t\t\t  onSubmit={handleSubmit}\r\n\t\t\t\t>\r\n\t\t\t\t  <Form.Group as={Row} controlId=\"journeyStartedAt\">\r\n\t\t\t\t\t<Form.Label column=\"true\" sm=\"2\">Journey started at:<span\r\n\t\t\t\t\t  className=\"text-danger\">*</span></Form.Label>\r\n\t\t\t\t\t<Col sm=\"10\">\r\n\t\t\t\t\t  <Form.Control\r\n\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\tname=\"journeyStartedAt\"\r\n\t\t\t\t\t\tvalue={values.journeyStartedAt}\r\n\t\t\t\t\t\ttype=\"date\"\r\n\t\t\t\t\t\tisValid={touched.journeyStartedAt && !errors.journeyStartedAt}\r\n\t\t\t\t\t\tisInvalid={!!errors.journeyStartedAt}\r\n\t\t\t\t\t  />\r\n\t\t\t\t\t  <Form.Control.Feedback type=\"invalid\">\r\n\t\t\t\t\t\t{errors.journeyStartedAt}\r\n\t\t\t\t\t  </Form.Control.Feedback>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t  </Form.Group>\r\n\t\t\t\t  <Form.Group as={Row} controlId=\"journeyEndedAt\">\r\n\t\t\t\t\t<Form.Label column=\"true\" sm=\"2\">Journey ended at:<span\r\n\t\t\t\t\t  className=\"text-danger\">*</span></Form.Label>\r\n\t\t\t\t\t<Col sm=\"10\">\r\n\t\t\t\t\t  <Form.Control\r\n\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\tname=\"journeyEndedAt\"\r\n\t\t\t\t\t\tvalue={values.journeyEndedAt}\r\n\t\t\t\t\t\ttype=\"date\"\r\n\t\t\t\t\t\tisValid={touched.journeyEndedAt && !errors.journeyEndedAt}\r\n\t\t\t\t\t\tisInvalid={!!errors.journeyEndedAt}\r\n\t\t\t\t\t  />\r\n\t\t\t\t\t  <Form.Control.Feedback type=\"invalid\">\r\n\t\t\t\t\t\t{errors.journeyEndedAt}\r\n\t\t\t\t\t  </Form.Control.Feedback>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t  </Form.Group>\r\n\t\t\t\t  <Form.Group as={Row} controlId=\"journeyStartOdometerReading\">\r\n\t\t\t\t\t<Form.Label column=\"true\" sm=\"2\">Journey start odometer reading:<span\r\n\t\t\t\t\t  className=\"text-danger\">*</span></Form.Label>\r\n\t\t\t\t\t<Col sm=\"10\">\r\n\t\t\t\t\t  <Form.Control\r\n\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\tname=\"journeyStartOdometerReading\"\r\n\t\t\t\t\t\tvalue={values.journeyStartOdometerReading}\r\n\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\tplaceholder=\"Journey start odometer reading...\"\r\n\t\t\t\t\t\tisValid={touched.journeyStartOdometerReading && !errors.journeyStartOdometerReading}\r\n\t\t\t\t\t\tisInvalid={!!errors.journeyStartOdometerReading}\r\n\t\t\t\t\t  />\r\n\t\t\t\t\t  <Form.Control.Feedback type=\"invalid\">\r\n\t\t\t\t\t\t{errors.journeyStartOdometerReading}\r\n\t\t\t\t\t  </Form.Control.Feedback>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t  </Form.Group>\r\n\t\t\t\t  <Form.Group as={Row} controlId=\"journeyEndOdometerReading\">\r\n\t\t\t\t\t<Form.Label column=\"true\" sm=\"2\">Journey end odometer reading:<span\r\n\t\t\t\t\t  className=\"text-danger\">*</span></Form.Label>\r\n\t\t\t\t\t<Col sm=\"10\">\r\n\t\t\t\t\t  <Form.Control\r\n\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\tname=\"journeyEndOdometerReading\"\r\n\t\t\t\t\t\tvalue={values.journeyEndOdometerReading}\r\n\t\t\t\t\t\tplaceholder=\"Journey end odometer reading...\"\r\n\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\tisValid={touched.journeyEndOdometerReading && !errors.journeyEndOdometerReading}\r\n\t\t\t\t\t\tisInvalid={!!errors.journeyEndOdometerReading}\r\n\t\t\t\t\t  />\r\n\t\t\t\t\t  <Form.Control.Feedback type=\"invalid\">\r\n\t\t\t\t\t\t{errors.journeyEndOdometerReading}\r\n\t\t\t\t\t  </Form.Control.Feedback>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t  </Form.Group>\r\n\t\t\t\t  <Form.Group as={Row} controlId=\"journeyFrom\">\r\n\t\t\t\t\t<Form.Label column=\"true\" sm=\"2\">Journey from:</Form.Label>\r\n\t\t\t\t\t<Col sm=\"10\">\r\n\t\t\t\t\t  <Form.Control\r\n\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\tname=\"journeyFrom\"\r\n\t\t\t\t\t\tvalue={values.journeyFrom}\r\n\t\t\t\t\t\tplaceholder=\"Journey from...\"\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tisValid={touched.journeyFrom && !errors.journeyFrom}\r\n\t\t\t\t\t\tisInvalid={!!errors.journeyFrom}\r\n\t\t\t\t\t  />\r\n\t\t\t\t\t  <Form.Control.Feedback type=\"invalid\">\r\n\t\t\t\t\t\t{errors.journeyFrom}\r\n\t\t\t\t\t  </Form.Control.Feedback>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t  </Form.Group>\r\n\t\t\t\t  <Form.Group as={Row} controlId=\"journeyTo\">\r\n\t\t\t\t\t<Form.Label column=\"true\" sm=\"2\">Journey to:</Form.Label>\r\n\t\t\t\t\t<Col sm=\"10\">\r\n\t\t\t\t\t  <Form.Control\r\n\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\tname=\"journeyTo\"\r\n\t\t\t\t\t\tvalue={values.journeyTo}\r\n\t\t\t\t\t\tplaceholder=\"Journey to...\"\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tisValid={touched.journeyTo && !errors.journeyTo}\r\n\t\t\t\t\t\tisInvalid={!!errors.journeyTo}\r\n\t\t\t\t\t  />\r\n\t\t\t\t\t  <Form.Control.Feedback type=\"invalid\">\r\n\t\t\t\t\t\t{errors.journeyTo}\r\n\t\t\t\t\t  </Form.Control.Feedback>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t  </Form.Group>\r\n\t\t\t\t  <Row className=\"justify-content-center my-5\">\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t  variant=\"primary\"\r\n\t\t\t\t\t  size=\"lg\"\r\n\t\t\t\t\t  type=\"submit\"\r\n\t\t\t\t\t  className=\"mr-5\"\r\n\t\t\t\t\t  disabled={isSubmitting}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t  Add journey\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t  variant=\"warning\"\r\n\t\t\t\t\t  size=\"lg\"\r\n\t\t\t\t\t  className=\"mr-5\"\r\n\t\t\t\t\t  onClick={resetForm}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t  Clear\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t  variant=\"danger\"\r\n\t\t\t\t\t  size=\"lg\"\r\n\t\t\t\t\t  onClick={() => history.push(`/show/${vehicle.id}`)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t  Cancel\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t  </Row>\r\n\t\t\t\t</Form>\r\n\t\t\t  )}\r\n\t\t\t</Formik>\r\n\t\t  )\r\n\t  }\r\n\t</Container>\r\n  )\r\n};\r\n","/**\r\n * AddFuelPurchase.js\r\n */\r\nimport React from 'react';\r\nimport {AppConsumer, AppContext} from \"../../AppContext/AppContext\";\r\nimport {Notification} from \"../Notification/Notification\";\r\nimport {Accordion, Button, Card, Col, Container, ListGroup, Row} from \"react-bootstrap\";\r\nimport {LoadingSpinner} from \"../LoadingSpinner/LoadingSpinner\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faPlus} from \"@fortawesome/free-solid-svg-icons/faPlus\";\r\n\r\n/**\r\n * AddFuelPurchase component - navigates to AddFuelPurchaseForm once a booking is selected\r\n */\r\nexport class AddFuelPurchase extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.initialState = {\r\n      vehicle: ''\r\n    };\r\n    this.state = {...this.initialState};\r\n  }\r\n\r\n  componentDidMount() {\r\n    const {vehicleID} = this.props.match.params;\r\n    const {vehicles} = this.context;\r\n\r\n    const vehicle = vehicles.find(vehicle => vehicle.id === vehicleID);\r\n    this.initialState = {\r\n      vehicle\r\n    };\r\n    this.setState({\r\n      ...this.initialState\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <AppConsumer>\r\n        {\r\n          ({loading, notification}) => (\r\n            <Container>\r\n              {\r\n                notification.display ?\r\n                  (\r\n                    <Notification\r\n                      display={notification.display}\r\n                      message={notification.message}/>\r\n                  ) : ''\r\n              }\r\n              <Row>\r\n                <Col>\r\n                  <h2 className=\"text-center my-5\">\r\n                    Select a booking to register a new fuel purchase for {this.state.vehicle ?\r\n                    `${this.state.vehicle.manufacturer} ${this.state.vehicle.model} (${this.state.vehicle.year})`\r\n                    : ''}\r\n                  </h2>\r\n                </Col>\r\n              </Row>\r\n              {\r\n                loading ?\r\n                  (\r\n                    <Row className=\"justify-content-center mt-5\">\r\n                      <LoadingSpinner/>\r\n                    </Row>\r\n                  ) :\r\n                  (\r\n                    <Accordion>\r\n                      {\r\n                        this.state.vehicle ?\r\n                          (\r\n                            this.state.vehicle\r\n                              .bookings\r\n                              .filter(booking => booking.vehicleID === this.state.vehicle.id)\r\n                              .sort((booking1, booking2) => {\r\n                                const booking1StartDate = new Date(booking1.startDate);\r\n                                const booking2StartDate = new Date(booking2.startDate);\r\n\r\n                                if (booking1StartDate > booking2StartDate) {\r\n                                  return -1;\r\n                                } else if (booking1StartDate < booking2StartDate) {\r\n                                  return 1;\r\n                                }\r\n                                return 0;\r\n                              })\r\n                              .map((booking, index) => (\r\n                                <Card key={index} style={{overflow: 'visible'}}>\r\n                                  <Card.Header>\r\n                                    <Accordion.Toggle\r\n                                      className=\"mr-auto\"\r\n                                      as={Button}\r\n                                      variant=\"link\"\r\n                                      eventKey={index}>\r\n                                      {`${new Date(booking.startDate).toLocaleDateString('en-AU')}`}\r\n                                    </Accordion.Toggle>\r\n                                    <Link to={`/addFuelPurchaseForm/${booking.id}`}>\r\n                                      <Button variant=\"outline-success\">\r\n                                        <FontAwesomeIcon icon={faPlus}/>\r\n                                      </Button>\r\n                                    </Link>\r\n                                  </Card.Header>\r\n                                  <Accordion.Collapse eventKey={index}>\r\n                                    <Card.Body>\r\n                                      <ListGroup>\r\n                                        <ListGroup.Item>\r\n                                          Start Date: {`${new Date(booking.startDate).toLocaleDateString('en-AU')}`}\r\n                                        </ListGroup.Item>\r\n                                        <ListGroup.Item>\r\n                                          End Date: {`${new Date(booking.endDate).toLocaleDateString('en-AU')}`}\r\n                                        </ListGroup.Item>\r\n                                        <ListGroup.Item>\r\n                                          Start Odometer: {booking.startOdometer} km\r\n                                        </ListGroup.Item>\r\n                                        <ListGroup.Item>\r\n                                          Booking Type: {booking.bookingType === 'D' ? 'Per day' : 'Per km'}\r\n                                        </ListGroup.Item>\r\n                                      </ListGroup>\r\n                                    </Card.Body>\r\n                                  </Accordion.Collapse>\r\n                                </Card>\r\n                              ))\r\n                          ) : ''\r\n\r\n                      }\r\n                    </Accordion>\r\n                  )\r\n              }\r\n\t\t\t  <Button\r\n\t\t\t\tclassName=\"my-5\"\r\n\t\t\t\tstyle={{\r\n\t\t\t\t  position: 'relative',\r\n\t\t\t\t  left: '50%',\r\n\t\t\t\t  transform: 'translateX(-50%)'\r\n\t\t\t\t}}\r\n\t\t\t\tvariant=\"danger\"\r\n\t\t\t\tsize=\"lg\"\r\n\t\t\t\tonClick={() => this.props.history.push(`/show/${this.state.vehicle.id}`)}\r\n\t\t\t  >\r\n\t\t\t\tCancel\r\n\t\t\t  </Button>\r\n            </Container>\r\n          )\r\n        }\r\n      </AppConsumer>\r\n    )\r\n  }\r\n}\r\n\r\nAddFuelPurchase.contextType = AppContext;\r\n","/**\r\n * FuelPurchase.js\r\n */\r\nimport moment from \"moment\";\r\n\r\n/**\r\n * FuelPurchase model class\r\n * @class FuelPurchase\r\n */\r\nexport class FuelPurchase {\r\n  _id;\r\n  _bookingID;\r\n  _createdAt;\r\n  _fuelPrice;\r\n  _fuelQuantity;\r\n  _updatedAt;\r\n\r\n  /**\r\n   * Creates a new FuelPurchase\r\n   * @param {string} bookingID - ID of the booking associated with this fuel purchase\r\n   * @param {number} fuelQuantity - amount of fuel of this purchase (in litres)\r\n   * @param {number} fuelPrice - price per litre of this fuel purchase\r\n   * @param {string} id - ID of this fuel purchase\r\n   * @param {string} createdAt - timestamp generated when this fuel purchase is created\r\n   * @param {string|null} updatedAt - timestamp generated when this fuel purchase is updated\r\n   */\r\n  constructor(bookingID, fuelQuantity, fuelPrice, id = require('uuid/v4')(), createdAt = moment().format('DD/MM/YYYY hh:mm:ss A'), updatedAt = null) {\r\n    this._id = id;\r\n    this._bookingID = bookingID;\r\n    this._fuelPrice = fuelPrice;\r\n    this._fuelQuantity = fuelQuantity;\r\n    this._createdAt = createdAt;\r\n    this._updatedAt = updatedAt;\r\n  }\r\n\r\n  get id() {\r\n    return this._id;\r\n  }\r\n\r\n  set id(value) {\r\n    this._id = value;\r\n  }\r\n\r\n  get bookingID() {\r\n    return this._bookingID;\r\n  }\r\n\r\n  set bookingID(value) {\r\n    this._bookingID = value;\r\n  }\r\n\r\n  get fuelQuantity() {\r\n    return this._fuelQuantity;\r\n  }\r\n\r\n  set fuelQuantity(value) {\r\n    this._fuelQuantity = value;\r\n  }\r\n\r\n  get fuelPrice() {\r\n    return this._fuelPrice;\r\n  }\r\n\r\n  set fuelPrice(value) {\r\n    this._fuelPrice = value;\r\n  }\r\n\r\n  get createdAt() {\r\n    return this._createdAt;\r\n  }\r\n\r\n  set createdAt(value) {\r\n    this._createdAt = value;\r\n  }\r\n\r\n  get updatedAt() {\r\n    return this._updatedAt;\r\n  }\r\n\r\n  set updatedAt(value) {\r\n    this._updatedAt = value;\r\n  }\r\n}\r\n","/**\r\n * AddFuelPurchaseForm.js\r\n */\r\nimport React, {useContext, useEffect, useState} from 'react';\r\nimport {useHistory, useParams} from 'react-router-dom';\r\nimport {AppContext} from \"../../AppContext/AppContext\";\r\nimport {Notification} from \"../Notification/Notification\";\r\nimport {Button, Col, Container, Form, Row} from \"react-bootstrap\";\r\nimport {LoadingSpinner} from \"../LoadingSpinner/LoadingSpinner\";\r\nimport {FuelPurchase} from \"../../Models/FuelPurchase\";\r\nimport Moment from 'moment';\r\nimport * as yup from \"yup\";\r\nimport {Formik} from \"formik\";\r\n\r\nconst moment = require('moment-range').extendMoment(Moment);\r\nconst cloneDeep = require('lodash.clonedeep');\r\n\r\n/**\r\n * AddFuelPurchaseForm component\r\n * @returns {*}\r\n * @constructor\r\n */\r\nexport const AddFuelPurchaseForm = () => {\r\n  const {loading, notification, vehicles, addResource} = useContext(AppContext);\r\n  const [fuelPurchaseToBeAdded, setFuelPurchaseToBeAdded] = useState(null);\r\n  const [addFuelPurchase, setAddFuelPurchase] = useState(false);\r\n  const {bookingID} = useParams();\r\n  const history = useHistory();\r\n  const vehicleToBeModified = vehicles.find(v => v.bookings.some(b => b.id === bookingID));\r\n  const vehicle = cloneDeep(vehicleToBeModified);\r\n  const booking = vehicle ? vehicle.bookings.find(b => b.id === bookingID) : null;\r\n  const associatedBooking = cloneDeep(booking);\r\n\r\n  // Defines a schema for the form to add a new fuel purchase\r\n  const schema = yup.object().shape({\r\n\tfuelQuantity: yup\r\n\t  .number()\r\n\t  .moreThan(0, 'Invalid fuel quantity')\r\n\t  .max(\r\n\t\tvehicle ?\r\n\t\t  vehicle.tankCapacity : 0,\r\n\t\t'Cannot be greater than the tank capacity of this vehicle'\r\n\t  )\r\n\t  .required('This field is required'),\r\n\tfuelPrice: yup\r\n\t  .number()\r\n\t  .moreThan(0, 'Invalid price')\r\n\t  .required('This field  is required')\r\n  });\r\n\r\n  // Detects changes on addFuelPurchase\r\n  // Adds a new fuel purchase if form is valid\r\n  useEffect(() => {\r\n\tif (addFuelPurchase && fuelPurchaseToBeAdded) {\r\n\t  addResource('fuel purchase', fuelPurchaseToBeAdded);\r\n\t  history.push(`/show/${vehicle.id}`);\r\n\t}\r\n  }, [addFuelPurchase]);\r\n\r\n  return (\r\n\t<Container>\r\n\t  {\r\n\t\tnotification && notification.display ?\r\n\t\t  (\r\n\t\t\t<Notification\r\n\t\t\t  display={notification.display}\r\n\t\t\t  message={notification.message}/>\r\n\t\t  ) : ''\r\n\t  }\r\n\t  <Row>\r\n\t\t<Col>\r\n\t\t  <h2 className=\"text-center my-5\">Register new fuel purchase\r\n\t\t\tfor {vehicle ? `${vehicle.manufacturer} ${vehicle.model} (${vehicle.year})` : ''},\r\n\t\t\tbooked\r\n\t\t\tfor: {associatedBooking ? `${moment(associatedBooking.startDate, 'YYYY-MM-DD').format('DD/MM/YYYY')}` : ''} - {associatedBooking ? `${moment(associatedBooking.endDate, 'YYYY-MM-DD').format('DD/MM/YYYY')}` : ''}</h2>\r\n\t\t</Col>\r\n\t  </Row>\r\n\t  {\r\n\t\tloading ?\r\n\t\t  (\r\n\t\t\t<Row className=\"justify-content-center mt-5\">\r\n\t\t\t  <LoadingSpinner/>\r\n\t\t\t</Row>\r\n\t\t  )\r\n\t\t  :\r\n\t\t  (\r\n\t\t\t<Formik\r\n\t\t\t  validationSchema={schema}\r\n\t\t\t  onSubmit={(values) => {\r\n\t\t\t\tconst {fuelQuantity, fuelPrice} = values;\r\n\t\t\t\tconst fuelPurchase = new FuelPurchase(bookingID, fuelQuantity, fuelPrice);\r\n\t\t\t\tsetFuelPurchaseToBeAdded(fuelPurchase);\r\n\t\t\t\tsetAddFuelPurchase(true);\r\n\t\t\t  }}\r\n\t\t\t  initialValues={{\r\n\t\t\t\tfuelQuantity: vehicle ? vehicle.tankCapacity : '',\r\n\t\t\t\tfuelPrice: ''\r\n\t\t\t  }}\r\n\t\t\t>\r\n\t\t\t  {({\r\n\t\t\t\t  handleSubmit,\r\n\t\t\t\t  handleChange,\r\n\t\t\t\t  resetForm,\r\n\t\t\t\t  values,\r\n\t\t\t\t  touched,\r\n\t\t\t\t  errors,\r\n\t\t\t\t  isSubmitting\r\n\t\t\t\t}) => (\r\n\t\t\t\t<Form\r\n\t\t\t\t  onSubmit={handleSubmit}\r\n\t\t\t\t>\r\n\t\t\t\t  <Form.Group as={Row} controlId=\"fuelQuantity\">\r\n\t\t\t\t\t<Form.Label column=\"true\" sm=\"2\">Fuel quantity:<span\r\n\t\t\t\t\t  className=\"text-danger\">*</span></Form.Label>\r\n\t\t\t\t\t<Col sm=\"10\">\r\n\t\t\t\t\t  <Form.Control\r\n\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\tname=\"fuelQuantity\"\r\n\t\t\t\t\t\tvalue={values.fuelQuantity}\r\n\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\tplaceholder=\"Fuel quantity (L)...\"\r\n\t\t\t\t\t\tisValid={touched.fuelQuantity && !errors.fuelQuantity}\r\n\t\t\t\t\t\tisInvalid={!!errors.fuelQuantity}\r\n\t\t\t\t\t  />\r\n\t\t\t\t\t  <Form.Control.Feedback type=\"invalid\">\r\n\t\t\t\t\t\t{errors.fuelQuantity}\r\n\t\t\t\t\t  </Form.Control.Feedback>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t  </Form.Group>\r\n\t\t\t\t  <Form.Group as={Row} controlId=\"fuelPrice\">\r\n\t\t\t\t\t<Form.Label column=\"true\" sm=\"2\">Fuel price per litre:<span\r\n\t\t\t\t\t  className=\"text-danger\">*</span></Form.Label>\r\n\t\t\t\t\t<Col sm=\"10\">\r\n\t\t\t\t\t  <Form.Control\r\n\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\tname=\"fuelPrice\"\r\n\t\t\t\t\t\tvalue={values.fuelPrice}\r\n\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\tplaceholder=\"Fuel price ($ / L)...\"\r\n\t\t\t\t\t\tisValid={touched.fuelPrice && !errors.fuelPrice}\r\n\t\t\t\t\t\tisInvalid={!!errors.fuelPrice}\r\n\t\t\t\t\t  />\r\n\t\t\t\t\t  <Form.Control.Feedback type=\"invalid\">\r\n\t\t\t\t\t\t{errors.fuelPrice}\r\n\t\t\t\t\t  </Form.Control.Feedback>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t  </Form.Group>\r\n\t\t\t\t  <Row className=\"justify-content-center my-5\">\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t  variant=\"primary\"\r\n\t\t\t\t\t  size=\"lg\"\r\n\t\t\t\t\t  type=\"submit\"\r\n\t\t\t\t\t  className=\"mr-5\"\r\n\t\t\t\t\t  disabled={isSubmitting}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t  Add fuel purchase\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t  variant=\"warning\"\r\n\t\t\t\t\t  size=\"lg\"\r\n\t\t\t\t\t  className=\"mr-5\"\r\n\t\t\t\t\t  onClick={resetForm}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t  Clear\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t  variant=\"danger\"\r\n\t\t\t\t\t  size=\"lg\"\r\n\t\t\t\t\t  onClick={() => history.push(`/show/${vehicle.id}`)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t  Cancel\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t  </Row>\r\n\t\t\t\t</Form>\r\n\t\t\t  )}\r\n\t\t\t</Formik>\r\n\t\t  )\r\n\t  }\r\n\t</Container>\r\n  )\r\n};\r\n","/**\r\n * ShowVehicle.js\r\n */\r\nimport React, {useContext} from 'react';\r\nimport {AppContext} from \"../../AppContext/AppContext\";\r\nimport {Button, Col, Container, Row} from \"react-bootstrap\";\r\nimport {LoadingSpinner} from \"../LoadingSpinner/LoadingSpinner\";\r\nimport {useHistory} from 'react-router-dom';\r\nimport {VehicleDetails} from \"./VehicleDetails\";\r\nimport {Notification} from \"../Notification/Notification\";\r\n\r\n/**\r\n * ShowVehicle component - rendered when the user navigates to /show/:vehicleID\r\n * @param props\r\n * @returns {*}\r\n * @constructor\r\n */\r\nexport const ShowVehicle = props => {\r\n  const history = useHistory();\r\n  const {\r\n    vehicles,\r\n    bookings,\r\n    journeys,\r\n    services,\r\n    fuelPurchases,\r\n    loading,\r\n    notification\r\n  } = useContext(AppContext);\r\n  let vehicle, vehicleBookings, vehicleJourneys, vehicleServices, vehicleFuelPurchases;\r\n  vehicle = vehicles.find(v => v.id === props.match.params.vehicleID);\r\n  if (vehicle) {\r\n    vehicleBookings = bookings.filter(b => b.vehicleID === vehicle.id);\r\n    vehicleJourneys = journeys.filter(j => vehicleBookings.some(b => b.id === j.bookingID));\r\n    vehicleServices = services.filter(s => s.vehicleID === vehicle.id);\r\n    vehicleFuelPurchases = fuelPurchases.filter(f => vehicleBookings.some(b => b.id === f.bookingID));\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      {\r\n        notification.display ?\r\n          (\r\n            <Notification\r\n              display={notification.display}\r\n              message={notification.message}/>\r\n          ) : ''\r\n      }\r\n      {\r\n        vehicle ?\r\n          (\r\n            <>\r\n              <Row>\r\n                <Col>\r\n                  <h2 className=\"text-center my-5\">\r\n                    {`${vehicle.manufacturer} ${vehicle.model} (${vehicle.year})`}\r\n                  </h2>\r\n                </Col>\r\n              </Row>\r\n              {\r\n                loading ?\r\n                  (\r\n                    <Row className=\"justify-content-center mt-5\">\r\n                      <LoadingSpinner/>\r\n                    </Row>\r\n                  )\r\n                  :\r\n                  <VehicleDetails\r\n                    vehicle={vehicle}\r\n                    bookings={vehicleBookings}\r\n                    journeys={vehicleJourneys}\r\n                    services={vehicleServices}\r\n                    fuelPurchases={vehicleFuelPurchases}\r\n                  />\r\n              }\r\n            </>\r\n          )\r\n          :\r\n          (\r\n            <>\r\n              <Row className=\"justify-content-center\">\r\n                <Col>\r\n                  <h2 className=\"text-center my-5\">Sorry, no vehicles were found</h2>\r\n                </Col>\r\n              </Row>\r\n            </>\r\n          )\r\n      }\r\n\t  <Row className=\"my-5\">\r\n\t\t<Col className=\"text-center\">\r\n\t\t  <Button\r\n\t\t\tonClick={() => history.push(`/browse`)}\r\n\t\t\tvariant=\"primary\"\r\n\t\t\tsize=\"lg\">\r\n\t\t\tBrowse vehicles\r\n\t\t  </Button>\r\n\t\t</Col>\r\n\t  </Row>\r\n    </Container>\r\n  )\r\n};\r\n","/**\r\n * Header.js\r\n */\r\nimport React from 'react';\r\n\r\n/**\r\n * @typedef {Object} HeaderProps\r\n * @property {string} headerText - the title of this header\r\n */\r\n/**\r\n * Header component\r\n * @param {HeaderProps} props\r\n * @returns {*}\r\n * @constructor\r\n */\r\nexport const Header = props => (\r\n  <h1 className=\"display-5 text-center my-4\">{props.headerText}</h1>\r\n);\r\n","/**\r\n * RevenueChart.js\r\n */\r\nimport React from 'react';\r\nimport {\r\n  Bar,\r\n  BarChart,\r\n  CartesianGrid,\r\n  Legend,\r\n  ResponsiveContainer,\r\n  Tooltip,\r\n  XAxis,\r\n  YAxis\r\n} from \"recharts\";\r\n\r\n/**\r\n * @typedef {Object} RevenueProps\r\n * @property {Array} data - contains the total revenue for each month/year\r\n */\r\n/**\r\n * RevenueChart component - renders a bar chart with the total revenue recorded per month and year\r\n * @param {RevenueProps} props\r\n * @returns {*}\r\n * @constructor\r\n */\r\nexport const RevenueChart = props => {\r\n  const CustomTooltip = ({payload, label, active}) => {\r\n\tif (active && payload) {\r\n\t  return (\r\n\t\t<div className=\"bg-light text-dark text-center p-2 border border-dark\">\r\n\t\t  <p className=\"font-weight-bold\">{label}</p>\r\n\t\t  <p>Revenue: <span\r\n\t\t\tclassName=\"text-success\">{`$ ${Number.parseFloat(payload[0].value).toFixed(2)}`}</span>\r\n\t\t  </p>\r\n\t\t</div>\r\n\t  )\r\n\t}\r\n\treturn null;\r\n  };\r\n\r\n  return (\r\n\t<ResponsiveContainer width=\"100%\" height={300}>\r\n\t  <BarChart data={props.data}>\r\n\t\t<CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\"/>\r\n\t\t<XAxis dataKey=\"monthAndYear\"/>\r\n\t\t<YAxis/>\r\n\t\t<Tooltip content={<CustomTooltip/>}/>\r\n\t\t<Legend/>\r\n\t\t<Bar dataKey=\"revenue\" barSize={20} fill=\"#8884d8\"/>\r\n\t  </BarChart>\r\n\t</ResponsiveContainer>\r\n  );\r\n};\r\n","/**\r\n * Dashboard.js\r\n */\r\nimport React, {useContext} from 'react';\r\nimport {Button, Container, Row} from \"react-bootstrap\";\r\nimport {Header} from \"../Header/Header\";\r\nimport {AppContext} from \"../../AppContext/AppContext\";\r\nimport {LoadingSpinner} from \"../LoadingSpinner/LoadingSpinner\";\r\nimport {RevenueChart} from \"./RevenueChart\";\r\n\r\n/**\r\n * Dashboard component - the first component displayed when the app starts\r\n * @param props\r\n * @returns {*}\r\n * @constructor\r\n */\r\nexport const Dashboard = props => {\r\n  const {loading, revenue} = useContext(AppContext);\r\n\r\n  return (\r\n\t<Container className=\"text-center\">\r\n\t  <Header headerText=\"Welcome to the Car Rental System\"/>\r\n\t  {\r\n\t\tloading ?\r\n\t\t  (\r\n\t\t\t<Row className=\"justify-content-center mt-5\">\r\n\t\t\t  <LoadingSpinner/>\r\n\t\t\t</Row>\r\n\t\t  ) :\r\n\t\t  (\r\n\t\t\t<>\r\n\t\t\t  <h2 className=\"my-5 text-center\">Revenue history (last 6 months):</h2>\r\n\t\t\t  <Row>\r\n\t\t\t\t<RevenueChart data={revenue}/>\r\n\t\t\t  </Row>\r\n\t\t\t</>\r\n\t\t  )\r\n\t  }\r\n\t  <Button\r\n\t\tsize=\"lg\"\r\n\t\tvariant=\"primary\"\r\n\t\tclassName=\"mt-5\"\r\n\t\tonClick={() => props.history.push('/browse')}\r\n\t  >\r\n\t\tBrowse vehicles\r\n\t  </Button>\r\n\t</Container>\r\n  )\r\n};\r\n","/**\r\n * App.js\r\n */\r\nimport React from 'react';\r\nimport {Navigation} from \"../Navigation/Navigation\";\r\nimport {BrowseVehicles} from \"../BrowseVehicles/BrowseVehicles\";\r\nimport {Route, Switch} from 'react-router-dom';\r\nimport {AddVehicle} from \"../AddVehicle/AddVehicle\";\r\nimport {firebase} from \"../../Firebase/Firebase\";\r\nimport {AppProvider} from \"../../AppContext/AppContext\";\r\nimport {EditVehicle} from \"../EditVehicle/EditVehicle\";\r\nimport {AddBooking} from \"../AddBooking/AddBooking\";\r\nimport {AddService} from \"../AddService/AddService\";\r\nimport {AddJourney} from \"../AddJourney/AddJourney\";\r\nimport {AddJourneyForm} from \"../AddJourney/AddJourneyForm\";\r\nimport {AddFuelPurchase} from \"../AddFuelPurchase/AddFuelPurchase\";\r\nimport {AddFuelPurchaseForm} from \"../AddFuelPurchase/AddFuelPurchaseForm\";\r\nimport {ShowVehicle} from \"../ShowVehicle/ShowVehicle\";\r\nimport {Vehicle} from \"../../Models/Vehicle\";\r\nimport {Booking} from \"../../Models/Booking\";\r\nimport {Journey} from \"../../Models/Journey\";\r\nimport {Service} from \"../../Models/Service\";\r\nimport {FuelPurchase} from \"../../Models/FuelPurchase\";\r\nimport {Dashboard} from \"../Dashboard/Dashboard\";\r\nimport moment from \"moment\";\r\n\r\n/**\r\n * App component - entry point of this application\r\n */\r\nexport class App extends React.Component {\r\n  constructor(props) {\r\n\tsuper(props);\r\n\r\n\t/**\r\n\t * Automatically dismisses notifications after 3.5 secs\r\n\t */\r\n\tthis.dismissNotification = () => {\r\n\t  setTimeout(() => {\r\n\t\tthis.setState({\r\n\t\t  notification: {\r\n\t\t\tdisplay: false,\r\n\t\t\tmessage: ''\r\n\t\t  }\r\n\t\t})\r\n\t  }, 3500)\r\n\t};\r\n\r\n\t/**\r\n\t * Edits a vehicle and updates both the state and firebase\r\n\t * @param {Vehicle} vehicle - a vehicle object that has the same ID as the vehicle to be\r\n\t * edited (for immutability), containing updated data\r\n\t */\r\n\tthis.editVehicle = vehicle => {\r\n\t  let fieldsChanged = {};\r\n\t  this.setState({\r\n\t\tloading: true\r\n\t  }, () => {\r\n\t\tthis.setState(prevState => {\r\n\t\t  const {vehicles} = {...prevState};\r\n\t\t  const oldVehicleIndex = vehicles.findIndex(v => v.id === vehicle.id);\r\n\t\t  const oldVehicle = vehicles[oldVehicleIndex];\r\n\t\t  fieldsChanged = Object\r\n\t\t\t.keys(oldVehicle)\r\n\t\t\t.reduce((fields, field) => {\r\n\t\t\t  if ((oldVehicle[field] !== vehicle[field]) && !Array.isArray(vehicle[field])) {\r\n\t\t\t    fields[field] = vehicle[field];\r\n\t\t\t  }\r\n\t\t\t  return fields;\r\n\t\t\t}, {});\r\n\t\t  vehicles[oldVehicleIndex] = vehicle;\r\n\r\n\t\t  return ({\r\n\t\t\t...prevState,\r\n\t\t\tvehicles\r\n\t\t  })\r\n\t\t}, () => {\r\n\t\t  const db = firebase.firestore();\r\n\r\n\t\t  return db\r\n\t\t\t.collection('vehicles')\r\n\t\t\t.doc(vehicle.id)\r\n\t\t\t.update(fieldsChanged)\r\n\t\t\t.then(() => {\r\n\t\t\t  this.setState({\r\n\t\t\t\tloading: false,\r\n\t\t\t\tnotification: {\r\n\t\t\t\t  display: true,\r\n\t\t\t\t  message: `The vehicle has been successfully updated`\r\n\t\t\t\t}\r\n\t\t\t  }, this.dismissNotification)\r\n\t\t\t})\r\n\t\t\t.catch(err => {\r\n\t\t\t  this.setState({\r\n\t\t\t\tloading: false,\r\n\t\t\t\tnotification: {\r\n\t\t\t\t  display: true,\r\n\t\t\t\t  message: `Could not edit vehicle: ${err}`\r\n\t\t\t\t}\r\n\t\t\t  }, () => {\r\n\t\t\t\tthis.dismissNotification();\r\n\t\t\t\tconsole.dir(err);\r\n\t\t\t  })\r\n\t\t\t})\r\n\t\t});\r\n\t  })\r\n\t};\r\n\r\n\t/**\r\n\t * Adds a new resource and updates both the state and firebase\r\n\t * @param {string} resourceType - one of: \"vehicle\", \"booking\", \"journey\", \"service\", \"fuel\r\n\t * purchase\" or \"fuelPurchase\"\r\n\t * @param {Vehicle|Booking|Journey|Service|FuelPurchase} resource\r\n\t */\r\n\tthis.addResource = (resourceType, resource) => {\r\n\t  if (!resourceType || !resource) {\r\n\t\treturn this.setState({\r\n\t\t  notification: {\r\n\t\t\tdisplay: true,\r\n\t\t\tmessage: 'Error: missing resource or resource type'\r\n\t\t  }\r\n\t\t}, this.dismissNotification)\r\n\t  }\r\n\t  let collectionName, collection;\r\n\r\n\t  switch (resourceType.trim().toLowerCase()) {\r\n\t\tcase 'vehicle':\r\n\t\t  collectionName = 'vehicles';\r\n\t\t  break;\r\n\r\n\t\tcase 'booking':\r\n\t\t  collectionName = 'bookings';\r\n\t\t  break;\r\n\r\n\t\tcase 'service':\r\n\t\t  collectionName = 'services';\r\n\t\t  break;\r\n\r\n\t\tcase 'journey':\r\n\t\t  collectionName = 'journeys';\r\n\t\t  break;\r\n\r\n\t\tcase 'fuelpurchase':\r\n\t\tcase 'fuel purchase':\r\n\t\t  collectionName = 'fuelPurchases';\r\n\t\t  break;\r\n\r\n\t\tdefault:\r\n\t\t  break;\r\n\t  }\r\n\t  let selectedVehicle, selectedVehicleIndex;\r\n\t  this.setState(prevState => {\r\n\t\tcollection = collectionName && prevState[collectionName];\r\n\t\tif (!collection) {\r\n\t\t  return ({\r\n\t\t\tnotification: {\r\n\t\t\t  display: true,\r\n\t\t\t  message: 'Error: invalid resource type provided'\r\n\t\t\t}\r\n\t\t  })\r\n\t\t} else {\r\n\t\t  const {vehicles} = prevState;\r\n\t\t  switch (collectionName) {\r\n\t\t\tcase 'services':\r\n\t\t\tcase 'bookings':\r\n\t\t\t  selectedVehicle = vehicles.find(v => v.id === resource.vehicleID);\r\n\t\t\t  selectedVehicleIndex = vehicles.findIndex(v => v.id === resource.vehicleID);\r\n\t\t\t  if (collectionName === 'services') {\r\n\t\t\t\tselectedVehicle.addService(resource);\r\n\t\t\t  } else {\r\n\t\t\t\tselectedVehicle.addBooking(resource);\r\n\t\t\t  }\r\n\t\t\t  break;\r\n\r\n\t\t\tcase 'journeys':\r\n\t\t\tcase 'fuelPurchases':\r\n\t\t\t  selectedVehicle = vehicles.find(v => v.bookings.some(b => b.id === resource.bookingID));\r\n\t\t\t  selectedVehicleIndex = vehicles.findIndex(v => v.bookings.some(b => b.id === resource.bookingID));\r\n\t\t\t  if (collectionName === 'journeys') {\r\n\t\t\t\tselectedVehicle.addJourney(resource);\r\n\t\t\t  } else {\r\n\t\t\t\tselectedVehicle.addFuelPurchase(resource);\r\n\t\t\t  }\r\n\t\t\t  break;\r\n\r\n\t\t\tdefault:\r\n\t\t\t  collection.push(resource);\r\n\t\t\t  break;\r\n\t\t  }\r\n\t\t}\r\n\r\n\t\tif (collectionName === 'vehicles') {\r\n\t\t  return ({\r\n\t\t\tloading: true,\r\n\t\t\tvehicles: collection\r\n\t\t  })\r\n\t\t} else {\r\n\t\t  prevState.vehicles[selectedVehicleIndex] = selectedVehicle;\r\n\t\t  return ({\r\n\t\t\tloading: true,\r\n\t\t\tvehicles: [...prevState.vehicles]\r\n\t\t  })\r\n\t\t}\r\n\t  }, () => {\r\n\t\tif (collectionName && collection) {\r\n\t\t  const db = firebase.firestore();\r\n\t\t  db\r\n\t\t\t.collection(collectionName)\r\n\t\t\t.doc(resource.id)\r\n\t\t\t.set({...resource})\r\n\t\t\t.then(() => {\r\n\t\t\t  this.setState(prevState => ({\r\n\t\t\t\tloading: false,\r\n\t\t\t\trevenue: this.calculateTotalRevenue(prevState.vehicles),\r\n\t\t\t\tnotification: {\r\n\t\t\t\t  display: true,\r\n\t\t\t\t  message: `The new ${resourceType} has been successfully added to the system`\r\n\t\t\t\t}\r\n\t\t\t  }), this.dismissNotification)\r\n\t\t\t})\r\n\t\t\t.catch(err => {\r\n\t\t\t  this.setState({\r\n\t\t\t\tloading: false,\r\n\t\t\t\tnotification: {\r\n\t\t\t\t  display: true,\r\n\t\t\t\t  message: `Could not add new ${resourceType}. Error: ${err.message}`\r\n\t\t\t\t}\r\n\t\t\t  }, this.dismissNotification)\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t  this.setState({\r\n\t\t\tnotification: {\r\n\t\t\t  display: false,\r\n\t\t\t  message: ''\r\n\t\t\t}\r\n\t\t  })\r\n\t\t}\r\n\t  })\r\n\t};\r\n\r\n\t/**\r\n\t * Deletes a resource (after confirmation by the user) from both the state and firebase\r\n\t * @param {string} resourceType - one of: \"vehicle\", \"booking\", \"journey\", \"service\", \"fuel\r\n\t * purchase\" or \"fuelPurchase\"\r\n\t * @param {Vehicle|Booking|Journey|Service|FuelPurchase} resource\r\n\t */\r\n\tthis.confirmDeleteResource = (resourceType, resource) => {\r\n\t  if (resourceType && resource) {\r\n\t\tthis.setDeleteResourceModalShow(null, null, () => {\r\n\t\t  this.setState(prevState => ({\r\n\t\t\t...prevState,\r\n\t\t\tloading: true\r\n\t\t  }), () => {\r\n\t\t\tlet collection;\r\n\t\t\tswitch (resourceType.trim().toLowerCase()) {\r\n\t\t\t  case 'vehicle':\r\n\t\t\t\tcollection = 'vehicles';\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t  case 'journey':\r\n\t\t\t\tcollection = 'journeys';\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t  case 'service':\r\n\t\t\t\tcollection = 'services';\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t  case 'booking':\r\n\t\t\t\tcollection = 'bookings';\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t  case 'fuel purchase':\r\n\t\t\t  case 'fuelpurchase':\r\n\t\t\t\tcollection = 'fuelPurchases';\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t  default:\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif (collection) {\r\n\t\t\t  const db = firebase.firestore();\r\n\t\t\t  if (collection === 'vehicles') {\r\n\t\t\t\t// delete everything associated with the vehicle first\r\n\t\t\t\t// delete journeys and bookings\r\n\t\t\t\tresource.bookings.forEach(b => {\r\n\t\t\t\t  // delete all journeys for each booking\r\n\t\t\t\t  b.journeys.forEach(j => {\r\n\t\t\t\t\tdb\r\n\t\t\t\t\t  .collection('journeys')\r\n\t\t\t\t\t  .doc(j.id)\r\n\t\t\t\t\t  .delete()\r\n\t\t\t\t  });\r\n\r\n\t\t\t\t  // delete all fuel purchases for this booking\r\n\t\t\t\t  b.fuelPurchases.forEach(f => {\r\n\t\t\t\t\tdb\r\n\t\t\t\t\t  .collection('fuelPurchases')\r\n\t\t\t\t\t  .doc(f.id)\r\n\t\t\t\t\t  .delete()\r\n\t\t\t\t  });\r\n\r\n\t\t\t\t  // delete the booking itself\r\n\t\t\t\t  db\r\n\t\t\t\t\t.collection('bookings')\r\n\t\t\t\t\t.doc(b.id)\r\n\t\t\t\t\t.delete()\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// delete services\r\n\t\t\t\tresource.services.forEach(s => {\r\n\t\t\t\t  db\r\n\t\t\t\t\t.collection('services')\r\n\t\t\t\t\t.doc(s.id)\r\n\t\t\t\t\t.delete()\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// delete the vehicle itself\r\n\t\t\t\tdb\r\n\t\t\t\t  .collection('vehicles')\r\n\t\t\t\t  .doc(resource.id)\r\n\t\t\t\t  .delete()\r\n\t\t\t\t  .then(() => {\r\n\t\t\t\t\tthis.setState(prevState => {\r\n\t\t\t\t\t  let {vehicles} = prevState;\r\n\t\t\t\t\t  vehicles = vehicles.filter(v => v.id !== resource.id);\r\n\t\t\t\t\t  return ({\r\n\t\t\t\t\t\tvehicles,\r\n\t\t\t\t\t\tloading: false,\r\n\t\t\t\t\t\trevenue: this.calculateTotalRevenue(vehicles),\r\n\t\t\t\t\t\tnotification: {\r\n\t\t\t\t\t\t  display: true,\r\n\t\t\t\t\t\t  message: `The ${resourceType} has been successfully removed from the system`\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t  });\r\n\t\t\t\t\t}, this.dismissNotification)\r\n\t\t\t\t  })\r\n\t\t\t  } else if (collection === 'bookings') {\r\n\t\t\t\t// delete booking from state first\r\n\t\t\t\tthis.setState(prevState => {\r\n\t\t\t\t  const {vehicles} = prevState;\r\n\t\t\t\t  const vehicleToBeModified = vehicles.find(v => v.bookings.some(b => b.id === resource.id));\r\n\t\t\t\t  vehicleToBeModified.removeBookingByID(resource.id);\r\n\t\t\t\t  return ({\r\n\t\t\t\t\tvehicles: [\r\n\t\t\t\t\t  ...vehicles.filter(v => v.id !== vehicleToBeModified.id),\r\n\t\t\t\t\t  vehicleToBeModified\r\n\t\t\t\t\t]\r\n\t\t\t\t  })\r\n\t\t\t\t}, () => {\r\n\t\t\t\t  // delete booking from firebase\r\n\t\t\t\t  db\r\n\t\t\t\t\t.collection('bookings')\r\n\t\t\t\t\t.doc(resource.id)\r\n\t\t\t\t\t.delete()\r\n\t\t\t\t\t.then(() => {\r\n\t\t\t\t\t  this.setState(prevState => ({\r\n\t\t\t\t\t\tloading: false,\r\n\t\t\t\t\t\trevenue: this.calculateTotalRevenue(prevState.vehicles),\r\n\t\t\t\t\t\tnotification: {\r\n\t\t\t\t\t\t  display: true,\r\n\t\t\t\t\t\t  message: `The ${resourceType} has been successfully removed from the system`\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t  }), this.dismissNotification)\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch(err => {\r\n\t\t\t\t\t  this.state({\r\n\t\t\t\t\t\tloading: false,\r\n\t\t\t\t\t\tnotification: {\r\n\t\t\t\t\t\t  display: true,\r\n\t\t\t\t\t\t  message: `Error: ${err.message}`\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t  })\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t  } else if (collection === 'journeys') {\r\n\t\t\t\t// delete journey from state\r\n\t\t\t\tthis.setState(prevState => {\r\n\t\t\t\t  const {vehicles} = prevState;\r\n\t\t\t\t  const vehicleToBeModified = vehicles.find(v => v.bookings.some(b => b.id === resource.bookingID));\r\n\t\t\t\t  vehicleToBeModified.removeJourneyByBookingID(resource, resource.bookingID);\r\n\r\n\t\t\t\t  return ({\r\n\t\t\t\t\tvehicles: [\r\n\t\t\t\t\t  ...vehicles.filter(v => v.id !== vehicleToBeModified.id),\r\n\t\t\t\t\t  vehicleToBeModified\r\n\t\t\t\t\t]\r\n\t\t\t\t  })\r\n\t\t\t\t}, () => {\r\n\t\t\t\t  // delete journey from firebase\r\n\t\t\t\t  db\r\n\t\t\t\t\t.collection('journeys')\r\n\t\t\t\t\t.doc(resource.id)\r\n\t\t\t\t\t.delete()\r\n\t\t\t\t\t.then(() => {\r\n\t\t\t\t\t  this.setState(prevState => ({\r\n\t\t\t\t\t\tloading: false,\r\n\t\t\t\t\t\trevenue: this.calculateTotalRevenue(prevState.vehicles),\r\n\t\t\t\t\t\tnotification: {\r\n\t\t\t\t\t\t  display: true,\r\n\t\t\t\t\t\t  message: `The ${resourceType} has been successfully removed from the system`\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t  }), this.dismissNotification)\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\r\n\t\t\t  } else if (collection === 'services') {\r\n\t\t\t\t// delete service from state\r\n\t\t\t\tthis.setState(prevState => {\r\n\t\t\t\t  const {vehicles} = prevState;\r\n\t\t\t\t  const vehicleToBeModified = vehicles.find(v => v.id === resource.vehicleID);\r\n\t\t\t\t  vehicleToBeModified.removeServiceByID(resource.id);\r\n\r\n\t\t\t\t  return ({\r\n\t\t\t\t\tvehicles: [\r\n\t\t\t\t\t  ...vehicles.filter(v => v.id !== vehicleToBeModified.id),\r\n\t\t\t\t\t  vehicleToBeModified\r\n\t\t\t\t\t]\r\n\t\t\t\t  })\r\n\t\t\t\t}, () => {\r\n\t\t\t\t  // delete service from firebase\r\n\t\t\t\t  db\r\n\t\t\t\t\t.collection('services')\r\n\t\t\t\t\t.doc(resource.id)\r\n\t\t\t\t\t.delete()\r\n\t\t\t\t\t.then(() => {\r\n\t\t\t\t\t  this.setState({\r\n\t\t\t\t\t\tloading: false,\r\n\t\t\t\t\t\tnotification: {\r\n\t\t\t\t\t\t  display: true,\r\n\t\t\t\t\t\t  message: `The ${resourceType} has been successfully removed from the system`\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t  }, this.dismissNotification)\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t  } else if (collection === 'fuelPurchases') {\r\n\t\t\t\t// delete fuel purchase from the state\r\n\t\t\t\tthis.setState(prevState => {\r\n\t\t\t\t  const {vehicles} = prevState;\r\n\t\t\t\t  const vehicleToBeModified = vehicles.find(v => v.bookings.some(b => b.id === resource.bookingID));\r\n\t\t\t\t  vehicleToBeModified.removeFuelPurchaseByBookingID(resource, resource.bookingID);\r\n\r\n\t\t\t\t  return ({\r\n\t\t\t\t\tvehicles: [\r\n\t\t\t\t\t  ...vehicles.filter(v => v.id !== vehicleToBeModified.id),\r\n\t\t\t\t\t  vehicleToBeModified\r\n\t\t\t\t\t]\r\n\t\t\t\t  })\r\n\t\t\t\t}, () => {\r\n\t\t\t\t  // delete fuel purchase from firebase\r\n\t\t\t\t  db\r\n\t\t\t\t\t.collection('fuelPurchases')\r\n\t\t\t\t\t.doc(resource.id)\r\n\t\t\t\t\t.delete()\r\n\t\t\t\t\t.then(() => {\r\n\t\t\t\t\t  this.setState({\r\n\t\t\t\t\t\tloading: false,\r\n\t\t\t\t\t\tnotification: {\r\n\t\t\t\t\t\t  display: true,\r\n\t\t\t\t\t\t  message: `The ${resourceType} has been successfully removed from the system`\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t  }, this.dismissNotification)\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t  } else {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t  loading: false,\r\n\t\t\t\t  notification: {\r\n\t\t\t\t\tdisplay: true,\r\n\t\t\t\t\tmessage: `Error: the collection associated with the item to be deleted was not found`\r\n\t\t\t\t  }\r\n\t\t\t\t}, this.dismissNotification)\r\n\t\t\t  }\r\n\t\t\t}\r\n\t\t  })\r\n\t\t})\r\n\t  }\r\n\t};\r\n\r\n\t/**\r\n\t *\r\n\t * @param resourceType\r\n\t * @param resource\r\n\t * @param callback\r\n\t */\r\n\tthis.setDeleteResourceModalShow = (resourceType, resource, callback) => {\r\n\t  this.setState(prevState => ({\r\n\t\tdeleteResource: {\r\n\t\t  ...prevState.deleteResource,\r\n\t\t  resource: resource ? resource : prevState.deleteResource.resource,\r\n\t\t  resourceType: resourceType ? resourceType : prevState.deleteResource.resourceType,\r\n\t\t  showDeleteResourceModal: !prevState.deleteResource.showDeleteResourceModal\r\n\t\t}\r\n\t  }), callback);\r\n\t};\r\n\r\n\tthis.state = {\r\n\t  loading: true,\r\n\t  vehicles: [],\r\n\t  services: [],\r\n\t  bookings: [],\r\n\t  journeys: [],\r\n\t  fuelPurchases: [],\r\n\t  revenue: [],\r\n\t  addVehicle: this.addVehicle,\r\n\t  editVehicle: this.editVehicle,\r\n\t  deleteResource: {\r\n\t\tresourceType: '',\r\n\t\tresource: '',\r\n\t\tconfirmDeleteResource: this.confirmDeleteResource,\r\n\t\tshowDeleteResourceModal: false,\r\n\t\tsetDeleteResourceModalShow: this.setDeleteResourceModalShow\r\n\t  },\r\n\t  addResource: this.addResource,\r\n\t  addBooking: this.addBooking,\r\n\t  addJourney: this.addJourney,\r\n\t  addService: this.addService,\r\n\t  addFuelPurchase: this.addFuelPurchase,\r\n\t  notification: {\r\n\t\tdisplay: false,\r\n\t\tmessage: ''\r\n\t  }\r\n\t};\r\n  }\r\n\r\n  /**\r\n   * Fetches all collections from firebase, organises the data in the state and updates\r\n   * odometers, if need be\r\n   */\r\n  componentDidMount() {\r\n\tthis\r\n\t  .fetchCollections('vehicles', 'bookings', 'journeys', 'services', 'fuelPurchases')\r\n\t  .then(values => {\r\n\t\t// move services, bookings, journeys and fuel purchases to the respective vehicle\r\n\t\tthis.setState(prevState => {\r\n\t\t  const {services, bookings, journeys, fuelPurchases, vehicles} = prevState;\r\n\r\n\t\t  let vehicleJourneys, vehicleServices, vehicleFuelPurchases;\r\n\r\n\t\t  // add each booking to the respective vehicle\r\n\t\t  vehicles.forEach(v => {\r\n\t\t\tbookings\r\n\t\t\t  .filter(b => b.vehicleID === v.id)\r\n\t\t\t  .forEach(b => {\r\n\t\t\t\tv.addBooking(b);\r\n\t\t\t  })\r\n\t\t  });\r\n\r\n\t\t  // add all other collections to the respective vehicle\r\n\t\t  vehicles.forEach(v => {\r\n\t\t\tvehicleJourneys = journeys.filter(j => v.bookings.some(b => b.id === j.bookingID));\r\n\t\t\tvehicleJourneys.forEach(j => {\r\n\t\t\t  v.addJourney(j);\r\n\t\t\t});\r\n\r\n\t\t\tvehicleFuelPurchases = fuelPurchases.filter(f => v.bookings.some(b => b.id === f.bookingID));\r\n\t\t\tvehicleFuelPurchases.forEach(f => {\r\n\t\t\t  v.addFuelPurchase(f);\r\n\t\t\t});\r\n\r\n\t\t\tvehicleServices = services.filter(s => s.vehicleID === v.id);\r\n\t\t\tvehicleServices.forEach(s => {\r\n\t\t\t  v.addService(s);\r\n\t\t\t});\r\n\r\n\t\t  });\r\n\r\n\t\t  // update odometers and notify user\r\n\t\t  vehicles.forEach(v => {\r\n\t\t\tv.updateVehicleOdometer(() => {\r\n\t\t\t  this.setState({\r\n\t\t\t\tnotification: {\r\n\t\t\t\t  display: true,\r\n\t\t\t\t  message: `Updated odometer for ${v.manufacturer} ${v.model} (${v.year})`\r\n\t\t\t\t}\r\n\t\t\t  }, this.dismissNotification)\r\n\t\t\t});\r\n\t\t  });\r\n\r\n\t\t  const revenue = this.calculateTotalRevenue(vehicles);\r\n\t\t  return ({\r\n\t\t\tvehicles,\r\n\t\t\trevenue\r\n\t\t  })\r\n\t\t});\r\n\t  })\r\n\t  .catch(err => {\r\n\t\t// display error message\r\n\t\tthis.setState({\r\n\t\t  notification: {\r\n\t\t\tdisplay: true,\r\n\t\t\tmessage: `Error: ${err.message}`\r\n\t\t  }\r\n\t\t}, this.dismissNotification)\r\n\t  })\r\n  }\r\n\r\n  /**\r\n   * Fetches a collection from firebase and adds it to the state\r\n   * @param {string} collection - one of: \"vehicles\", \"bookings\", \"journeys, \"services\" or\r\n   * \"fuelPurchases\"\r\n   * @returns {Promise<firebase.firestore.QuerySnapshot>}\r\n   */\r\n  fetchCollection = (collection) => {\r\n\tconst formattedCollection = collection.trim().toLowerCase();\r\n\tconst db = firebase.firestore();\r\n\treturn db\r\n\t  .collection(collection)\r\n\t  .get()\r\n\t  .then(querySnapshot => {\r\n\t\tlet data = querySnapshot.docs.map(doc => doc.data());\r\n\r\n\t\tthis.setState(prevState => {\r\n\t\t  data = data.map(resource => {\r\n\t\t\tswitch (formattedCollection) {\r\n\t\t\t  case 'vehicles':\r\n\t\t\t\tresource = new Vehicle(resource._manufacturer, resource._model, resource._year, resource._odometerReading, resource._registrationNumber, resource._tankCapacity, resource._id, resource._createdAt, resource._updatedAt);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t  case 'bookings':\r\n\t\t\t\tresource = new Booking(resource._vehicleID, resource._bookingType, resource._startDate, resource._endDate, resource._startOdometer, resource._id, resource._createdAt, resource._updatedAt);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t  case 'journeys':\r\n\t\t\t\tresource = new Journey(resource._bookingID, resource._journeyStartOdometerReading, resource._journeyEndOdometerReading, resource._journeyStartedAt, resource._journeyEndedAt, resource._journeyFrom, resource._journeyTo, resource._id, resource._createdAt, resource._updatedAt);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t  case 'services':\r\n\t\t\t\tresource = new Service(resource._vehicleID, resource._serviceOdometer, resource._servicedAt, resource._id, resource._createdAt, resource._updatedAt);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t  case 'fuelpurchases':\r\n\t\t\t  case 'fuel purchases':\r\n\t\t\t\tresource = new FuelPurchase(resource._bookingID, resource._fuelQuantity, resource._fuelPrice, resource._id, resource._createdAt, resource._updatedAt);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t  default:\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\treturn resource;\r\n\t\t  });\r\n\r\n\t\t  return ({\r\n\t\t\tloading: false,\r\n\t\t\t[collection]: [...data]\r\n\t\t  })\r\n\t\t}, () => {\r\n\r\n\t\t})\r\n\t  })\r\n\t  .catch(e => {\r\n\t\tthis.setState({\r\n\t\t  loading: false\r\n\t\t}, () => {\r\n\t\t  console.dir(e);\r\n\t\t})\r\n\t  })\r\n  };\r\n\r\n  /**\r\n   * Fetches multiple collections from firebase\r\n   * @param {Array<string>|string} collections - array of collection names to be fetched\r\n   * @returns {Promise<firebase.firestore.QuerySnapshot[]>}\r\n   */\r\n  async fetchCollections(...collections) {\r\n\treturn Promise.all(collections.map(collection => this.fetchCollection(collection)))\r\n  }\r\n\r\n  /**\r\n   * @typedef {Object} Revenue\r\n   * @property {string} monthAndYear - month / year of the revenue recorded\r\n   * @property {number} revenue - revenue recorded for this month and year\r\n   */\r\n  /**\r\n   * Calculates and maps total revenue generated (by month and year, for the last 6 months) by all\r\n   * vehicles in the system\r\n   * @param {Array<Vehicle>} vehicles - vehicles registered in the system\r\n   * @returns {Array<Revenue>} data - mapped revenue data\r\n   */\r\n  calculateTotalRevenue = vehicles => {\r\n\tlet data = [];\r\n\tvehicles = vehicles || this.state.vehicles;\r\n\tif (vehicles && vehicles.length) {\r\n\t  vehicles.forEach(v => {\r\n\t\tconst vehicleRevenue =\r\n\t\t  v\r\n\t\t\t.bookings\r\n\t\t\t.reduce((mappedBookings, b) => {\r\n\t\t\t  const {bookingCost} = b;\r\n\t\t\t  const bookingMonthAndYear = moment(b.startDate, \"YYYY-MM-DD\").format('MMMM YYYY');\r\n\t\t\t  const mappedBooking = {\r\n\t\t\t\tbookingMonthAndYear,\r\n\t\t\t\tbookingCost\r\n\t\t\t  };\r\n\t\t\t  mappedBookings.push(mappedBooking);\r\n\t\t\t  return mappedBookings;\r\n\t\t\t}, [])\r\n\t\t\t.sort((mappedBooking1, mappedBooking2) => {\r\n\t\t\t  return moment(mappedBooking1.bookingMonthAndYear, 'MMMM YYYY').isSameOrBefore(moment(mappedBooking2.bookingMonthAndYear, 'MMMM YYYY'))\r\n\t\t\t})\r\n\t\t\t.reduce((bookingsByMonthAndYear, mappedBooking) => {\r\n\t\t\t  if (bookingsByMonthAndYear.some(b => moment(b.monthAndYear, 'MMMM YYYY').isSame(moment(mappedBooking.bookingMonthAndYear, 'MMMM YYYY')))) {\r\n\t\t\t\tbookingsByMonthAndYear[bookingsByMonthAndYear.findIndex(entry => moment(entry.monthAndYear, 'MMMM YYYY').isSame(moment(mappedBooking.bookingMonthAndYear, 'MMMM YYYY')))].revenue += mappedBooking.bookingCost;\r\n\t\t\t  } else {\r\n\t\t\t\tbookingsByMonthAndYear.push({\r\n\t\t\t\t  monthAndYear: mappedBooking.bookingMonthAndYear,\r\n\t\t\t\t  revenue: mappedBooking.bookingCost\r\n\t\t\t\t})\r\n\t\t\t  }\r\n\t\t\t  return bookingsByMonthAndYear;\r\n\t\t\t}, []);\r\n\t\tdata.push(...vehicleRevenue);\r\n\t  });\r\n\t  data =\r\n\t\tdata\r\n\t\t  .reduce((mappedRevenue, entry) => {\r\n\t\t\tif (mappedRevenue.some(r => moment(r.monthAndYear, 'MMMM YYYY').isSame(moment(entry.monthAndYear, 'MMMM YYYY')))) {\r\n\t\t\t  mappedRevenue[mappedRevenue.findIndex(r => moment(r.monthAndYear, 'MMMM YYYY').isSame(moment(entry.monthAndYear, 'MMMM YYYY')))].revenue += entry.revenue;\r\n\t\t\t} else {\r\n\t\t\t  mappedRevenue.push({\r\n\t\t\t\tmonthAndYear: entry.monthAndYear,\r\n\t\t\t\trevenue: entry.revenue\r\n\t\t\t  })\r\n\t\t\t}\r\n\t\t\treturn mappedRevenue;\r\n\t\t  }, []);\r\n\t}\r\n\treturn data\r\n\t  .sort((revenue1, revenue2) => {\r\n\t\treturn moment(revenue1.monthAndYear, 'MMMM YYYY').diff(moment(revenue2.monthAndYear, 'MMMM' +\r\n\t\t  ' YYYY'))\r\n\t  })\r\n\t  .filter(revenue => moment(revenue.monthAndYear, 'MMMM YYYY').isSameOrBefore(moment(moment(), 'MMMM YYYY')))\r\n\t  .filter(revenue => moment(revenue.monthAndYear, 'MMMM YYYY').isSameOrAfter(moment(moment(), 'MMMM YYYY').subtract(6, 'months')));\r\n  };\r\n\r\n  render() {\r\n\treturn (\r\n\t  <AppProvider value={this.state}>\r\n\t\t<Navigation/>\r\n\t\t<Switch>\r\n\t\t  <Route exact path=\"/\" render={props => <Dashboard {...props} />}/>\r\n\t\t  <Route path=\"/browse\">\r\n\t\t\t<BrowseVehicles/>\r\n\t\t  </Route>\r\n\t\t  <Route path=\"/add\" render={(props) => <AddVehicle {...props} />}/>\r\n\t\t  <Route path=\"/show/:vehicleID\" render={(props) => <ShowVehicle {...props} />}/>\r\n\t\t  <Route path=\"/edit/:vehicleID\" render={(props) => <EditVehicle {...props} />}/>\r\n\t\t  <Route path=\"/addBooking/:vehicleID\" render={(props) => <AddBooking {...props} />}/>\r\n\t\t  <Route path=\"/addJourney/:vehicleID\" render={(props) => <AddJourney {...props} />}/>\r\n\t\t  <Route path=\"/addJourneyForm/:bookingID\"\r\n\t\t\t\t render={(props) => <AddJourneyForm {...props} />}/>\r\n\t\t  <Route path=\"/addService/:vehicleID\" render={(props) => <AddService {...props} />}/>\r\n\t\t  <Route path=\"/addFuelPurchase/:vehicleID\"\r\n\t\t\t\t render={(props) => <AddFuelPurchase {...props} />}/>\r\n\t\t  <Route path=\"/addFuelPurchaseForm/:bookingID\"\r\n\t\t\t\t render={(props) => <AddFuelPurchaseForm {...props} />}/>\r\n\t\t  <Route path=\"*\" render={(props) => <BrowseVehicles {...props}/>}/>\r\n\t\t</Switch>\r\n\t  </AppProvider>\r\n\t)\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.1/8 is considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n\t// The URL constructor is available in all browsers that support SW.\r\n\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n\tif (publicUrl.origin !== window.location.origin) {\r\n\t  // Our service worker won't work if PUBLIC_URL is on a different origin\r\n\t  // from what our page is served on. This might happen if a CDN is used to\r\n\t  // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n\t  return;\r\n\t}\r\n\r\n\twindow.addEventListener('load', () => {\r\n\t  const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n\t  if (isLocalhost) {\r\n\t\t// This is running on localhost. Let's check if a service worker still exists or not.\r\n\t\tcheckValidServiceWorker(swUrl, config);\r\n\r\n\t\t// Add some additional logging to localhost, pointing developers to the\r\n\t\t// service worker/PWA documentation.\r\n\t\tnavigator.serviceWorker.ready.then(() => {\r\n\t\t  console.log(\r\n\t\t\t'This web app is being served cache-first by a service ' +\r\n\t\t\t'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n\t\t  );\r\n\t\t});\r\n\t  } else {\r\n\t\t// Is not localhost. Just register service worker\r\n\t\tregisterValidSW(swUrl, config);\r\n\t  }\r\n\t});\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n\t.register(swUrl)\r\n\t.then(registration => {\r\n\t  registration.onupdatefound = () => {\r\n\t\tconst installingWorker = registration.installing;\r\n\t\tif (installingWorker == null) {\r\n\t\t  return;\r\n\t\t}\r\n\t\tinstallingWorker.onstatechange = () => {\r\n\t\t  if (installingWorker.state === 'installed') {\r\n\t\t\tif (navigator.serviceWorker.controller) {\r\n\t\t\t  // At this point, the updated precached content has been fetched,\r\n\t\t\t  // but the previous service worker will still serve the older\r\n\t\t\t  // content until all client tabs are closed.\r\n\t\t\t  console.log(\r\n\t\t\t\t'New content is available and will be used when all ' +\r\n\t\t\t\t'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n\t\t\t  );\r\n\r\n\t\t\t  // Execute callback\r\n\t\t\t  if (config && config.onUpdate) {\r\n\t\t\t\tconfig.onUpdate(registration);\r\n\t\t\t  }\r\n\t\t\t} else {\r\n\t\t\t  // At this point, everything has been precached.\r\n\t\t\t  // It's the perfect time to display a\r\n\t\t\t  // \"Content is cached for offline use.\" message.\r\n\t\t\t  console.log('Content is cached for offline use.');\r\n\r\n\t\t\t  // Execute callback\r\n\t\t\t  if (config && config.onSuccess) {\r\n\t\t\t\tconfig.onSuccess(registration);\r\n\t\t\t  }\r\n\t\t\t}\r\n\t\t  }\r\n\t\t};\r\n\t  };\r\n\t})\r\n\t.catch(error => {\r\n\t  console.error('Error during service worker registration:', error);\r\n\t});\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n\t.then(response => {\r\n\t  // Ensure service worker exists, and that we really are getting a JS file.\r\n\t  const contentType = response.headers.get('content-type');\r\n\t  if (\r\n\t\tresponse.status === 404 ||\r\n\t\t(contentType != null && contentType.indexOf('javascript') === -1)\r\n\t  ) {\r\n\t\t// No service worker found. Probably a different app. Reload the page.\r\n\t\tnavigator.serviceWorker.ready.then(registration => {\r\n\t\t  registration.unregister().then(() => {\r\n\t\t\twindow.location.reload();\r\n\t\t  });\r\n\t\t});\r\n\t  } else {\r\n\t\t// Service worker found. Proceed as normal.\r\n\t\tregisterValidSW(swUrl, config);\r\n\t  }\r\n\t})\r\n\t.catch(() => {\r\n\t  console.log(\r\n\t\t'No internet connection found. App is running in offline mode.'\r\n\t  );\r\n\t});\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n\tnavigator.serviceWorker.ready.then(registration => {\r\n\t  registration.unregister();\r\n\t});\r\n  }\r\n}\r\n","/**\r\n * index.js\r\n */\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {App} from './components/App/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename=\"/car-rental-system\">\r\n\t<App/>\r\n  </BrowserRouter>\r\n  ,\r\n  document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}